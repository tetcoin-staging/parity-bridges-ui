{"version":3,"sources":["util/envVariablesValidations.ts","constants.ts","configs/chainsSetup/customHashers.ts","actions/accountActions.ts","configs/index.ts","util/createPolkadotJsUrl.ts","reducers/accountReducer.ts","contexts/AccountContextProvider.tsx","actions/messageActions.ts","hooks/useLocalStorage.ts","components/Buttons.tsx","actions/transactionActions.ts","reducers/messageReducer.ts","contexts/MessageContext.tsx","reducers/transactionReducer.ts","contexts/TransactionContext.tsx","types/transactionTypes.ts","util/shortenItem.ts","actions/sourceTargetActions.ts","components/Icons.tsx","types/sourceTargetTypes.ts","reducers/sourceTargetReducer.ts","contexts/SourceTargetContextProvider.tsx","util/logger.ts","hooks/useBlocksInfo.ts","util/getSubstrateDynamicNames.ts","hooks/useBridgedBlocks.ts","hooks/useIsMounted.ts","hooks/useMountedState.ts","hooks/useMessagesLane.ts","hooks/useLaneId.ts","hooks/useDashboard.ts","hooks/useDashboardProfile.ts","hooks/useLoadingApi.ts","hooks/useChainGetters.ts","util/chainsUtils.ts","hooks/useTransactionNonces.ts","util/transactionUtils.ts","hooks/useTransactionSteps.ts","components/TransactionStatus.tsx","components/TransactionStatusMock.tsx","components/Transactions.tsx","components/StorageDrawer.tsx","components/Inputs.tsx","components/theme.ts","components/LayoutBoxes.tsx","components/MenuAction.tsx","components/Network.tsx","components/Alert.tsx","contexts/GUIContextProvider.tsx","types/keyringTypes.ts","contexts/KeyringContextProvider.tsx","util/getConfigs.ts","hooks/useApiConnection.ts","hooks/useTransactionPreparation.ts","hooks/useTransactionType.ts","hooks/useSendMessage.ts","components/CustomCall.tsx","components/ExtensionAccountCheck.tsx","components/Remark.tsx","util/getDeriveAccount.ts","hooks/useDerivedAccount.ts","hooks/useAccounts.ts","util/getReceiverAddress.ts","hooks/useReceiver.ts","hooks/useApiBalance.ts","hooks/useBalance.ts","components/Balance.tsx","components/AccountIdenticon.tsx","components/AccountDisplay.tsx","components/Account.tsx","components/Sender.tsx","util/formatAccounts.ts","components/SnackBar.tsx","components/TokenSymbol.tsx","components/ReceiverInput.tsx","util/evalUnits.ts","hooks/usePrevious.ts","components/GenericAccount.tsx","components/ReceiverDerivedAccount.tsx","components/Receiver.tsx","components/Transfer.tsx","screens/Main.tsx","App.tsx","hooks/useConnections.ts","index.tsx"],"names":["expectedVariables","INCORRECT_FORMAT","GENERIC","AccountActionsTypes","hashers","blake2Keccak256Hasher","data","u8aConcat","blake2AsU8a","keccakAsU8a","getProviderInfo","chainNumber","types","providedHasher","process","providerUrl","variable","envVariable","Error","checkEnvVariable","hasher","polkadotjsUrl","jsonU8a","stringToU8a","JSON","stringify","compressed","zlibSync","level","encoded","base64Encode","encodeURIComponent","createPolkadotJsUrl","provider","WsProvider","AccountActionCreators","account","payload","type","SET_ACCOUNT","accountReducer","state","action","AccountContext","React","createContext","UpdateAccountContext","useAccountContext","useContext","AccountContextProvider","props","children","useReducer","dispatchAccount","Provider","value","MessageActionsTypes","useLocalStorage","localStorageKey","useState","localStorage","getItem","localValue","setLocalValue","useEffect","setItem","useStyles","makeStyles","theme","submit","padding","spacing","borderRadius","contact","backgroundColor","palette","secondary","light","switchMode","fontSize","typography","body2","drawerMenu","justifyContent","ButtonExt","startIcon","variant","disableElevation","href","classes","Button","className","onClick","url","newWindow","window","open","opener","openInNewTab","ButtonDrawerMenu","color","fullWidth","ButtonSwitchMode","ButtonSubmit","Box","mt","mb","TransactionActionTypes","MessageActionsCreators","CLEAR_MESSAGE","message","TRIGGER_MESSAGE","TransactionActionCreators","initialTransaction","CREATE_TRANSACTION_STATUS","estimatedFee","SET_ESTIMATED_FEE","receiverAddress","SET_RECEIVER_ADDRESS","unformattedReceiverAddress","SET_UNFORMATTED_RECEIVER_ADDRESS","updatedValues","id","UPDATE_CURRENT_TRANSACTION_STATUS","genericReceiverAccount","SET_GENERIC_RECEIVER_ACCOUNT","derivedReceiverAccount","SET_DERIVED_RECEIVER_ACCOUNT","messageReducer","MessageContext","UpdateMessageContext","useUpdateMessageContext","MessageContextProvider","dispatchMessage","transactionReducer","newState","transactions","unshift","createTransaction","map","stateTransaction","updateTransaction","TransactionStatusEnum","TransactionTypes","TransactionContext","UpdateTransactionContext","useTransactionContext","useUpdateTransactionContext","TransactionContextProvider","transaction","dispatchTransaction","SourceTargetActionsTypes","item","length","substring","error","main","success","IconTxStatus","status","COMPLETED","IN_PROGRESS","FAILED","NOT_STARTED","IconApiStatus","ChainDetails","SourceTargetActionsCreators","chain","SWAP_CHAINS","sourceTargetReducer","SOURCE","sourceChain","sourceApiConnection","TARGET","targetApiConnection","sourceConfigs","targetConfigs","targetChain","sourcePolkadotjsUrl","targetPolkadotjsUrl","SourceTargetContext","useSourceTarget","UpdateSourceTargetContext","SourceTargetContextProvider","connections","sourceTargetChains","dispatchChangeSourceTarget","winston","addColors","debug","info","warn","myformat","format","cli","all","logger","createLogger","transports","Console","useBlocksInfo","isApiReady","api","bestBlock","setBestBlock","bestBlockFinalized","setBestBlockFinalized","derive","bestNumber","res","toString","then","unsub","unsubscribeBestNumber","catch","e","bestNumberFinalized","unsubscribeBestNumberFinalized","getSubstrateDynamicNames","key","bridgedGrandpaChain","bridgedMessages","estimatedFeeMethodName","latestReceivedNonceMethodName","storageKey","useBridgedBlocks","bestBridgedFinalizedBlock","setBestBridgedFinalizedBlock","unsubImportedHeaders","unsubBestFinalized","query","bestFinalized","importedHeaders","toJSON","number","a","useMountedState","initialState","isMounted","mountedRef","useRef","useCallback","current","useIsMounted","setState","useMessageLane","latestReceivedNonce","pendingMessages","totalMessages","outboundLanes","setOutboudLanes","bridgeReceivedMessages","inboundLanes","setInboudLanes","laneId","getLane","setter","isOutbound","latest_generated_nonce","get","latest_received_nonce","BN","sub","isNeg","u","Promise","resolve","reject","shouldGetLane","unsubscribeOutboundLanes","unsubscribeInboundLanes","useDashboard","ChainDetail","chainDetail","sourceChainDetails","targetChainDetails","isSourceApiReady","sourceApi","isTargetApiReady","targetApi","destination","local","profile","setProfile","useDashboardProfile","blockInfo","bridgedBlocks","messagesLane","useMessagesLane","useLoadingApi","areApiReady","sourceReady","targetReady","useChainGetters","sourceSS58Format","ss58Format","targetSS58Format","getValuesByChain","getChainBySS58Prefix","prefix","parseInt","getSourceTargetRole","sourceChainsMatch","sourceRole","targetRole","useTransactionNonces","nonceOfBestTargetBlock","setNonceOfBestTargetBlock","nonceOfFinalTargetBlock","setNonceOfFinalTargetBlock","isTransactionCompleted","getLatestReceivedNonce","blockNumber","rpc","getBlockHash","blockHash","call","latestReceivedNonceCall","latestReceivedNonceCallType","registry","createType","finalizedNonce","bestNonce","updateNonces","useTransactionSteps","onComplete","steps","setSteps","deliveryBlock","setDeliveryBlock","finished","setFinished","latestReceivedNonceOnSource","bestBridgedFinalizedBlockOnTarget","bestBlockFinalizedOnTarget","bestBlockOnTarget","stepEvaluator","transactionValue","chainValue","bnChainValue","bnTransactionValue","gte","completionStatus","isCompleted","sourceTransactionFinalized","block","blockFinalityRelayed","messageDelivered","messageNonce","messageFinalizedOnTarget","sourceConfirmationReceived","chainType","label","labelOnChain","card","marginBottom","marginRight","fontWeight","maxWidth","TransactionStatus","transactionDisplayProps","disabled","Card","elevation","size","component","idx","pt","pb","pl","pr","border","Typography","TransactionStatusMock","Transactions","shortenItem","drawer","position","top","left","width","height","paddingLeft","paddingTop","overflow","display","closeDrawerIcon","background","paper","marginLeft","marginTop","StorageDrawer","useGUIContext","setDrawer","handleDrawerOpen","handleDrawerClose","Fade","in","timeout","enter","exit","IconButton","selectLabel","h4","text","hint","styleAccountCompanion","paddingRight","divider","borderTopLeftRadius","borderTopRightRadius","SelectLabel","bridgesBlue","substrateGray","substrateGreen","paletteLight","common","black","white","default","primary","dark","contrastText","red","active","grey","allVariants","fontFamily","h1","lineHeight","letterSpacing","h2","h3","body1","button","textTransform","subtitle1","subtitle2","overline","shadows","ui","transition","breakpoints","down","sidebar","zIndex","flexDirection","borderRight","fade","BoxUI","Container","Paper","BoxSidebar","menu","margin","pointerEvents","MenuAction","items","changeMenu","menuIdx","anchorEl","setAnchorEl","undefined","setId","setOpen","Boolean","ButtonBase","event","currentTarget","title","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","i","n","isEnabled","bottom","right","statsEntry","alignItems","svg","NetworkSides","dbSource","dbTarget","marginY","p","target","rel","Divider","style","opacity","NetworkStats","Alert","DrawerContext","GUIContextProvider","ThemeProvider","createMuiTheme","KeyringStatuses","KeyringContext","useKeyringContext","KeyringContextProvider","INIT","keyringStatus","setKeyringStatus","keyringPairs","setKeyringPairs","keyringPairsReady","setkeyringPairsReady","extensionExists","setExtensionExists","accountExists","setAccountExists","isDevelopment","loadAccounts","asyncLoadAccounts","LOADING","web3Enable","web3Accounts","allAccounts","address","meta","name","keyring","loadAll","READY","ERROR","keyringOptions","getPairs","getConfigs","apiPromise","properties","getChainProperties","system","systemChain","chainName","split","prop","bridgeIds","getBridgeId","bridgeId","TypeRegistry","useApiConnection","connectionDetails","setApiPromise","isReady","setIsReady","configs","setConfigs","ApiPromise","create","err","register","getChainConfigs","values","isEmpty","useTransactionPreparation","input","weightInput","isValidCall","setPayload","weight","setValues","REMARK","TRANSFER","CUSTOM","tx","remark","toU8a","u8aToHex","slice","paymentInfo","toNumber","balances","transfer","isHex","hexToU8a","getValues","useTransactionType","payloadType","messageFeeType","lane_id","toHex","estimatedFeeCall","estimatedFeeType","calculateFee","compactAddLength","origin","SourceAccount","addressRaw","spec_version","useSendMessage","isRunning","setIsRunning","sendLaneMessage","moment","makeCall","bridgeMessage","sendMessage","options","nonce","sourceAccount","isInjected","web3FromSource","source","injector","signer","signAndSend","events","CREATED","isBroadcast","isInBlock","forEach","method","toArray","getBlock","asInBlock","header","isFinalized","asFinalized","isButtonDisabled","CustomCall","decoded","setDecoded","customCallInput","setCustomCallInput","setWeightInput","setError","TextField","onChange","decodePayload","helperText","Message","Header","statusFunc","from","ExtensionAccountCheck","msg","severity","Remark","remarkInput","setRemarkInput","multiline","rows","getDeriveAccount","decodeAddress","encodeAddress","blake2AsHex","Uint8Array","useDerivedAccount","useAccounts","accounts","setAccounts","derivedAccount","setCurrentAccount","find","getReceiverAddress","checkAddress","validatedDerivedAcccount","rest","formatFound","useReceiver","setReceiver","setUnformattedReceiver","validateAccount","receiver","formattedAccount","useApiBalance","isDerived","ZERO","initValues","chainTokens","formattedBalance","free","useBalance","providedSi","unsubscribe","formatBalance","decimals","chainDecimals","withUnit","withSi","getBalance","whiteSpace","Balance","balance","placeholder","filter","emptyAddress","AccountIdenticon","onCopy","ctx","AddressKind","missingAddress","tooltipIcon","AccountDisplay","addressKind","friendlyName","hideAddress","withTooltip","shortAddress","shorterItem","displayName","displayText","Tooltip","arrow","placement","interactive","Account","COMPANION","networkHeading","paddingBottom","borderTop","selectAccountMainItem","accountMain","borderBottomLeftRadius","borderBottomRightRadius","accountCompanion","Sender","chains","setChains","renderAccounts","formatedAddress","icon","toLocaleUpperCase","formatAccounts","MenuItem","getName","AccountSelected","Select","disableUnderline","renderValue","CloseButton","styled","SnackBar","useSnackbar","enqueueSnackbar","closeSnackbar","TokenSymbol","InputAdornment","ReceiverInput","EvalMessages","setFormatFound","showBalance","setShowBalance","prevTargetChain","ref","usePrevious","reset","addressInput","InputBase","selectAccountCompanionItem","cursor","NATIVE","GenericAccount","selected","setSelected","nativeAddress","nativeState","companionAddress","companionState","looseHelperAccount","shortGenericAddress","ReceiverDerivedAccount","shortUnformattedReceiver","Receiver","si","symbol","floats","ints","alphaFloats","alphaInts","inputAmount","textAlign","Transfer","setHelperText","transferInput","setTransferInput","actualInput","setActualInput","amountNotCorrect","setAmountNotCorrect","planck","add","test","GIBBERISH","parseFloat","replace","SUCCESS","numericPart","charPart","siVal","s","SYMBOL_ERROR","GENERAL_ERROR","evalUnits","actualValue","InputProps","endAdornment","MenuContents","Main","index","setIndex","searchItems","choice","x","chain1","customTypesChain1","chain2","customTypesChain2","substrateProviders","connectionDetails1","connectionDetails2","App","chainsConnections","chain1Configs","polkadotjsUrl1","apiConnection1","chain2Configs","polkadotjsUrl2","apiConnection2","setConnections","apiReady","setApiReady","chainName1","chainName2","useConnections","Backdrop","CircularProgress","path","v","checkExpectedVariables","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a60a0b.chunk.js","sourcesContent":["// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nconst expectedVariables = [\n  'REACT_APP_CHAIN_1_SUBSTRATE_PROVIDER',\n  'REACT_APP_CHAIN_2_SUBSTRATE_PROVIDER',\n  'REACT_APP_LANE_ID',\n  'REACT_APP_KEYRING_DEV_LOAD_ACCOUNTS'\n];\n\nconst optionalVariables = [\n  'REACT_APP_CHAIN_1_CUSTOM_TYPES_URL',\n  'REACT_APP_CHAIN_2_CUSTOM_TYPES_URL',\n  'REACT_APP_CHAIN_1_CUSTOM_HASHER',\n  'REACT_APP_CHAIN_2_CUSTOM_HASHER'\n];\n\nconst checkExpectedVariables = () => {\n  for (const v of expectedVariables) {\n    if (!process.env[v]) {\n      throw new Error(`Missing ${v} variable`);\n    }\n  }\n  return true;\n};\n\nconst checkUnexpectedVariables = () => {\n  for (const v of Object.keys(process.env)) {\n    if (!expectedVariables.includes(v) && !optionalVariables.includes(v)) {\n      throw new Error(`Unexpected ${v} variable found.`);\n    }\n  }\n  return true;\n};\n\nconst checkEnvVariable = (variable: string) => {\n  const envVariable = process.env[variable];\n  if (!envVariable) {\n    throw new Error(`Env Variable ${variable} was not defined`);\n  }\n  return envVariable;\n};\n\nexport { checkEnvVariable, checkExpectedVariables, checkUnexpectedVariables };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const SOURCE = 'sourceChain';\nexport const TARGET = 'targetChain';\n\nexport const CHAIN_1 = '1';\nexport const CHAIN_2 = '2';\n\nexport const INCORRECT_FORMAT = 'INCORRECT_FORMAT';\nexport const GENERIC = 'GENERIC';\nexport const GENERIC_SUBSTRATE_PREFIX = 42;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a, keccakAsU8a } from '@polkadot/util-crypto';\n\ntype Hasher = { [index: string]: (data: Uint8Array) => Uint8Array } | null;\n\nfunction blake2Keccak256Hasher(data: Uint8Array) {\n  return u8aConcat(blake2AsU8a(data), keccakAsU8a(data));\n}\n\nconst hashers: Hasher = {\n  blake2Keccak256Hasher\n};\n\nexport default hashers;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { Account } from '../types/accountTypes';\n\nenum AccountActionsTypes {\n  SET_ACCOUNT = 'SET_ACCOUNT'\n}\n\nconst setAccount = (account: Account) => ({\n  payload: { account },\n  type: AccountActionsTypes.SET_ACCOUNT\n});\n\nconst AccountActionCreators = {\n  setAccount\n};\n\nexport { AccountActionsTypes, AccountActionCreators };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { WsProvider } from '@polkadot/api';\nimport { ApiOptions } from '@polkadot/api/types';\n\nimport { checkEnvVariable } from '../util/envVariablesValidations';\nimport { CHAIN_1, CHAIN_2 } from '../constants';\nimport { createPolkadotJsUrl } from '../util/createPolkadotJsUrl';\nimport { ConnectionChainInformation } from '../types/sourceTargetTypes';\nimport customTypesChain1 from './substrateCustomTypes/chain1.json';\nimport customTypesChain2 from './substrateCustomTypes/chain2.json';\nimport hashers from './chainsSetup/customHashers';\n\nconst getProviderInfo = (chainNumber: string, types: ApiOptions['types']) => {\n  const providedHasher = process.env[`REACT_APP_CHAIN_${chainNumber}_CUSTOM_HASHER`];\n  const providerUrl = checkEnvVariable(`REACT_APP_CHAIN_${chainNumber}_SUBSTRATE_PROVIDER`);\n\n  const hasher = (providedHasher && hashers && hashers[providedHasher]) || null;\n\n  const polkadotjsUrl = createPolkadotJsUrl(types!, providerUrl);\n  return {\n    hasher,\n    provider: new WsProvider(providerUrl),\n    polkadotjsUrl,\n    types\n  };\n};\n\nexport const substrateProviders = (): ConnectionChainInformation[] => {\n  const chain1 = getProviderInfo(CHAIN_1, customTypesChain1);\n  const chain2 = getProviderInfo(CHAIN_2, customTypesChain2);\n\n  return [\n    {\n      chainNumber: CHAIN_1,\n      hasher: chain1.hasher,\n      polkadotjsUrl: chain1.polkadotjsUrl,\n      types: chain1.types,\n      provider: chain1.provider\n    },\n    {\n      chainNumber: CHAIN_2,\n      hasher: chain2.hasher,\n      polkadotjsUrl: chain2.polkadotjsUrl,\n      types: chain2.types,\n      provider: chain2.provider\n    }\n  ];\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { stringToU8a } from '@polkadot/util';\nimport { base64Encode } from '@polkadot/util-crypto';\nimport { zlibSync } from 'fflate';\n\nexport function createPolkadotJsUrl(types: Record<string, any>, providerUrl: string): string {\n  const jsonU8a = stringToU8a(JSON.stringify(types));\n  const compressed = zlibSync(jsonU8a, { level: 9 });\n  const encoded = base64Encode(compressed);\n\n  return `https://polkadot.js.org/apps/?rpc=${encodeURIComponent(providerUrl)}&types=${encodeURIComponent(encoded)}`;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { AccountActionsTypes } from '../actions/accountActions';\nimport type { AccountsActionType, AccountState } from '../types/accountTypes';\n\nexport default function accountReducer(state: AccountState, action: AccountsActionType): AccountState {\n  switch (action.type) {\n    case AccountActionsTypes.SET_ACCOUNT:\n      return { ...state, account: action.payload.account };\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport accountReducer from '../reducers/accountReducer';\nimport { AccountContextType, AccountsActionType } from '../types/accountTypes';\n\ninterface AccountContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport interface UpdateAccountContext {\n  dispatchAccount: React.Dispatch<AccountsActionType>;\n}\n\nexport const AccountContext: React.Context<AccountContextType> = React.createContext({} as AccountContextType);\n\nexport const UpdateAccountContext: React.Context<UpdateAccountContext> = React.createContext(\n  {} as UpdateAccountContext\n);\n\nexport function useAccountContext() {\n  return useContext(AccountContext);\n}\n\nexport function useUpdateAccountContext() {\n  return useContext(UpdateAccountContext);\n}\n\nexport function AccountContextProvider(props: AccountContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n\n  const [account, dispatchAccount] = useReducer(accountReducer, {\n    account: null\n  });\n\n  return (\n    <AccountContext.Provider value={account}>\n      <UpdateAccountContext.Provider value={{ dispatchAccount }}>{children}</UpdateAccountContext.Provider>\n    </AccountContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { Payload } from '../types/messageTypes';\n\nenum MessageActionsTypes {\n  TRIGGER_MESSAGE = 'TRIGGER_MESSAGE',\n  CLEAR_MESSAGE = 'CLEAR_MESSAGE'\n}\n\nconst triggerInfoMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'info' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst triggerSuccessMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'success' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst triggerErrorMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'error' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst triggerWarningMessage = (payload: Payload) => ({\n  payload: { message: payload.message, variant: 'warning' },\n  type: MessageActionsTypes.TRIGGER_MESSAGE\n});\n\nconst clearMessage = () => ({\n  payload: {},\n  type: MessageActionsTypes.CLEAR_MESSAGE\n});\n\nconst MessageActionsCreators = {\n  clearMessage,\n  triggerErrorMessage,\n  triggerInfoMessage,\n  triggerSuccessMessage,\n  triggerWarningMessage\n};\n\nexport { MessageActionsTypes, MessageActionsCreators };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useEffect, useState } from 'react';\n\nconst useLocalStorage = (localStorageKey: string): [string, React.Dispatch<React.SetStateAction<string>>] => {\n  const [localValue, setLocalValue] = useState(localStorage.getItem(localStorageKey) || '');\n\n  useEffect((): void => {\n    localStorage.setItem(localStorageKey, localValue);\n  }, [localValue, localStorageKey]);\n\n  return [localValue, setLocalValue];\n};\n\nexport default useLocalStorage;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Button, ButtonProps } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  submit: {\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(1.75)\n  },\n  contact: {\n    backgroundColor: 'transparent',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.light\n    }\n  },\n  switchMode: {\n    fontSize: theme.typography.body2.fontSize\n  },\n  drawerMenu: {\n    justifyContent: 'end',\n    '&.MuiButton-textPrimary': {\n      backgroundColor: theme.palette.secondary.light\n    }\n  }\n}));\n\nexport const ButtonExt = ({\n  children,\n  startIcon = <ForumIcon />,\n  variant = 'contained',\n  disableElevation = true,\n  href = 'https://github.com/paritytech/parity-bridges-ui/issues',\n  ...props\n}: ButtonProps) => {\n  const classes = useStyles();\n  const openInNewTab = (url: string): void => {\n    const newWindow = window.open(url, '_blank', 'noopener,noreferrer');\n    if (newWindow) newWindow.opener = null;\n  };\n  return (\n    <Button\n      className={classes.contact}\n      variant={variant}\n      startIcon={startIcon}\n      disableElevation={disableElevation}\n      onClick={() => openInNewTab(href)}\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const ButtonDrawerMenu = ({ children, color = 'secondary', fullWidth = true, ...props }: ButtonProps) => {\n  const classes = useStyles();\n  return (\n    <Button className={classes.drawerMenu} color={color} fullWidth={fullWidth} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport const ButtonSwitchMode = ({ children, color = 'secondary', ...props }: ButtonProps) => {\n  const classes = useStyles();\n  return (\n    <Button className={classes.switchMode} color={color} {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport const ButtonSubmit = ({\n  children,\n  color = 'primary',\n  variant = 'contained',\n  fullWidth = true,\n  ...props\n}: ButtonProps) => {\n  const classes = useStyles();\n  return (\n    <Box mt={2} mb={2}>\n      <Button className={classes.submit} color={color} variant={variant} fullWidth={fullWidth} {...props}>\n        {children}\n      </Button>\n    </Box>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionStatusType, UpdatedTransactionStatusType } from '../types/transactionTypes';\n\nenum TransactionActionTypes {\n  SET_ESTIMATED_FEE = 'SET_ESTIMATED_FEE',\n  SET_RECEIVER_ADDRESS = 'SET_RECEIVER_ADDRESS',\n  SET_UNFORMATTED_RECEIVER_ADDRESS = 'SET_UNFORMATTED_RECEIVER_ADDRESS',\n  CREATE_TRANSACTION_STATUS = 'CREATE_TRANSACTION_STATUS',\n  UPDATE_CURRENT_TRANSACTION_STATUS = 'UPDATE_CURRENT_TRANSACTION_STATUS',\n  SET_TRANSACTION_COMPLETED = 'SET_TRANSACTION_COMPLETED',\n  SET_RECEIVER_VALIDATION = 'SET_RECEIVER_VALIDATION',\n  SET_DERIVED_RECEIVER_ACCOUNT = 'SET_DERIVED_RECEIVER_ACCOUNT',\n  SET_GENERIC_RECEIVER_ACCOUNT = 'SET_GENERIC_RECEIVER_ACCOUNT'\n}\n\nconst estimateFee = (estimatedFee: string) => ({\n  payload: { estimatedFee },\n  type: TransactionActionTypes.SET_ESTIMATED_FEE\n});\n\nconst setReceiverAddress = (receiverAddress: string | null) => ({\n  payload: { receiverAddress },\n  type: TransactionActionTypes.SET_RECEIVER_ADDRESS\n});\n\nconst setUnformattedReceiverAddress = (unformattedReceiverAddress: string | null) => ({\n  payload: { unformattedReceiverAddress },\n  type: TransactionActionTypes.SET_UNFORMATTED_RECEIVER_ADDRESS\n});\n\nconst createTransactionStatus = (initialTransaction: TransactionStatusType) => {\n  return {\n    payload: { initialTransaction },\n    type: TransactionActionTypes.CREATE_TRANSACTION_STATUS\n  };\n};\n\nconst updateTransactionStatus = (updatedValues: UpdatedTransactionStatusType, id: string) => {\n  return {\n    payload: { id, updatedValues },\n    type: TransactionActionTypes.UPDATE_CURRENT_TRANSACTION_STATUS\n  };\n};\n\nconst setGenericAccount = (genericReceiverAccount: string | null) => ({\n  payload: { genericReceiverAccount },\n  type: TransactionActionTypes.SET_GENERIC_RECEIVER_ACCOUNT\n});\n\nconst setDerivedAccount = (derivedReceiverAccount: string | null) => ({\n  payload: { derivedReceiverAccount },\n  type: TransactionActionTypes.SET_DERIVED_RECEIVER_ACCOUNT\n});\n\nconst TransactionActionCreators = {\n  createTransactionStatus,\n  estimateFee,\n  setReceiverAddress,\n  setUnformattedReceiverAddress,\n  updateTransactionStatus,\n  setGenericAccount,\n  setDerivedAccount\n};\n\nexport { TransactionActionCreators, TransactionActionTypes };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { MessageActionsTypes } from '../actions/messageActions';\nimport type { MessagesActionType, MessageState } from '../types/messageTypes';\n\nexport default function messageReducer(state: MessageState, action: MessagesActionType): MessageState {\n  switch (action.type) {\n    case MessageActionsTypes.CLEAR_MESSAGE:\n      return { ...state, message: null, variant: null };\n    case MessageActionsTypes.TRIGGER_MESSAGE:\n      return { ...state, message: action.payload.message, variant: action.payload.variant };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport messageReducer from '../reducers/messageReducer';\nimport { MessageContextType, MessagesActionType } from '../types/messageTypes';\n\ninterface MessageContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport interface UpdateMessageContext {\n  dispatchMessage: React.Dispatch<MessagesActionType>;\n}\n\nexport const MessageContext: React.Context<MessageContextType> = React.createContext({} as MessageContextType);\n\nexport const UpdateMessageContext: React.Context<UpdateMessageContext> = React.createContext(\n  {} as UpdateMessageContext\n);\n\nexport function useMessageContext() {\n  return useContext(MessageContext);\n}\n\nexport function useUpdateMessageContext() {\n  return useContext(UpdateMessageContext);\n}\n\nexport function MessageContextProvider(props: MessageContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n\n  const [message, dispatchMessage] = useReducer(messageReducer, {\n    message: null,\n    variant: null\n  });\n\n  return (\n    <MessageContext.Provider value={message}>\n      <UpdateMessageContext.Provider value={{ dispatchMessage }}>{children}</UpdateMessageContext.Provider>\n    </MessageContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionTypes } from '../actions/transactionActions';\nimport { Payload, TransactionsActionType, TransactionState, TransactionStatusType } from '../types/transactionTypes';\n\nconst updateTransaction = (state: TransactionState, payload: Payload): TransactionState => {\n  if (state.transactions) {\n    const newState = { ...state };\n    const { updatedValues, id } = payload;\n    newState.transactions = newState.transactions.map((stateTransaction) => {\n      const { id: transactionId } = stateTransaction;\n      if (transactionId === id) {\n        return {\n          ...stateTransaction,\n          ...updatedValues\n        };\n      }\n      return stateTransaction;\n    });\n    return newState;\n  }\n  return state;\n};\n\nconst createTransaction = (state: TransactionState, initialTransaction: TransactionStatusType): TransactionState => {\n  const newState = { ...state };\n  newState.transactions.unshift(initialTransaction);\n  return newState;\n};\n\nexport default function transactionReducer(state: TransactionState, action: TransactionsActionType): TransactionState {\n  switch (action.type) {\n    case TransactionActionTypes.SET_ESTIMATED_FEE:\n      return { ...state, estimatedFee: action.payload.estimatedFee };\n    case TransactionActionTypes.SET_RECEIVER_ADDRESS:\n      return { ...state, receiverAddress: action.payload.receiverAddress };\n    case TransactionActionTypes.SET_UNFORMATTED_RECEIVER_ADDRESS:\n      return { ...state, unformattedReceiverAddress: action.payload.unformattedReceiverAddress };\n    case TransactionActionTypes.CREATE_TRANSACTION_STATUS:\n      return createTransaction(state, action.payload.initialTransaction);\n    case TransactionActionTypes.UPDATE_CURRENT_TRANSACTION_STATUS:\n      return updateTransaction(state, action.payload);\n    case TransactionActionTypes.SET_DERIVED_RECEIVER_ACCOUNT:\n      return { ...state, derivedReceiverAccount: action.payload.derivedReceiverAccount };\n    case TransactionActionTypes.SET_GENERIC_RECEIVER_ACCOUNT:\n      return { ...state, genericReceiverAccount: action.payload.genericReceiverAccount };\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\n\nimport transactionReducer from '../reducers/transactionReducer';\nimport { TransactionContextType, TransactionsActionType } from '../types/transactionTypes';\n\ninterface TransactionContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport interface UpdateTransactionContext {\n  dispatchTransaction: React.Dispatch<TransactionsActionType>;\n}\n\nexport const TransactionContext: React.Context<TransactionContextType> = React.createContext(\n  {} as TransactionContextType\n);\n\nexport const UpdateTransactionContext: React.Context<UpdateTransactionContext> = React.createContext(\n  {} as UpdateTransactionContext\n);\n\nexport function useTransactionContext() {\n  return useContext(TransactionContext);\n}\n\nexport function useUpdateTransactionContext() {\n  return useContext(UpdateTransactionContext);\n}\n\nexport function TransactionContextProvider(props: TransactionContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n\n  const [transaction, dispatchTransaction] = useReducer(transactionReducer, {\n    derivedReceiverAccount: null,\n    estimatedFee: null,\n    genericReceiverAccount: null,\n    receiverAddress: null,\n    unformattedReceiverAddress: null,\n    transactions: []\n  });\n\n  return (\n    <TransactionContext.Provider value={transaction}>\n      <UpdateTransactionContext.Provider value={{ dispatchTransaction }}>{children}</UpdateTransactionContext.Provider>\n    </TransactionContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionTypes } from '../actions/transactionActions';\n\nexport interface TransactionContextType {\n  estimatedFee: string | null;\n  receiverAddress: string | null;\n  unformattedReceiverAddress: string | null;\n  transactions: Array<TransactionStatusType>;\n  derivedReceiverAccount: string | null;\n  genericReceiverAccount: string | null;\n}\n\nexport interface Payload {\n  [propName: string]: any;\n}\n\nexport interface UpdatedTransactionStatusType {\n  [propName: string]: any;\n}\n\nexport enum TransactionStatusEnum {\n  NOT_STARTED = 'NOT_STARTED',\n  CREATED = 'CREATED',\n  IN_PROGRESS = 'IN_PROGRESS',\n  COMPLETED = 'COMPLETED',\n  FAILED = 'FAILED'\n}\n\nexport interface TransactionStatusType extends UpdatedTransactionStatusType {\n  input: string;\n  sourceChain: string;\n  targetChain: string;\n  sourceAccount: null | string;\n  receiverAddress: null | string;\n  type: string;\n  status: TransactionStatusEnum;\n}\nexport interface TransactionState {\n  estimatedFee: string | null;\n  receiverAddress: string | null;\n  unformattedReceiverAddress: string | null;\n  derivedReceiverAccount: string | null;\n  genericReceiverAccount: string | null;\n  transactions: Array<TransactionStatusType>;\n}\n\nexport type TransactionsActionType = { type: TransactionActionTypes; payload: Payload };\n\nexport enum TransactionTypes {\n  CUSTOM = 'CUSTOM',\n  TRANSFER = 'TRANSFER',\n  REMARK = 'REMARK'\n}\n\nexport interface Step {\n  chainType: string;\n  label: string;\n  labelOnChain?: string;\n  status: keyof typeof TransactionStatusEnum;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport default (item: string) => {\n  if (!item || item.length < 8) {\n    return item;\n  }\n\n  return `${item.substring(0, 6)}...${item.substring(item.length - 8)}`;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nenum SourceTargetActionsTypes {\n  SWAP_CHAINS = 'SWAP_CHAINS'\n}\n\nconst switchChains = (chain: string) => ({\n  payload: { chain },\n  type: SourceTargetActionsTypes.SWAP_CHAINS\n});\n\nconst SourceTargetActionsCreators = {\n  switchChains\n};\n\nexport { SourceTargetActionsTypes, SourceTargetActionsCreators };\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport FiberManualRecordTwoToneIcon from '@material-ui/icons/FiberManualRecordTwoTone';\nimport React from 'react';\n\nimport { TransactionStatusEnum } from '../types/transactionTypes';\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    color: theme.palette.error.main\n  },\n  success: {\n    color: theme.palette.success.main\n  }\n}));\n\ninterface IconTxStatusProps {\n  status: keyof typeof TransactionStatusEnum;\n}\n\ninterface IconApiStatusProps {\n  status: boolean;\n  className?: string;\n}\nexport const IconTxStatus = ({ status }: IconTxStatusProps) => {\n  switch (status) {\n    case TransactionStatusEnum.COMPLETED:\n      return <CheckCircleOutlineIcon />;\n    case TransactionStatusEnum.IN_PROGRESS:\n      return <AutorenewIcon />;\n    case TransactionStatusEnum.FAILED:\n      return <ErrorOutlineIcon />;\n    case TransactionStatusEnum.NOT_STARTED:\n      return <FiberManualRecordTwoToneIcon />;\n    default:\n      return <FiberManualRecordIcon />;\n  }\n};\n\nexport const IconApiStatus = ({ status, className }: IconApiStatusProps) => {\n  const classes = useStyles();\n  return <FiberManualRecordIcon className={`${status ? classes.success : classes.error} ${className}`} />;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { ApiOptions } from '@polkadot/api/types';\nimport { SourceTargetActionsTypes } from '../actions/sourceTargetActions';\nimport { ProviderInterface } from '@polkadot/rpc-provider/types';\n\nexport interface ApiPromiseConnectionType {\n  api: ApiPromise; // From @polkadot/api\\\n  isApiReady: boolean;\n}\n\nexport interface ConnectionChainInformation {\n  chainNumber: string;\n  hasher: ((data: Uint8Array) => Uint8Array) | null;\n  provider: ProviderInterface;\n  types?: ApiOptions['types'];\n  polkadotjsUrl: string;\n}\n\nexport interface Configs {\n  bridgeIds: { [propName: string]: Array<number> };\n  chainName: string;\n  ss58Format: number;\n}\n\nexport type Connection = {\n  chainName: string;\n  apiConnection: ApiPromiseConnectionType;\n  polkadotjsUrl: string;\n  configs: Configs;\n};\ninterface Payload {\n  [propName: string]: string;\n}\n\nexport type SourceTargetAction = { type: SourceTargetActionsTypes; payload?: Payload };\nexport interface ApiPromiseContextType {\n  api: ApiPromise; // From @polkadot/api\\\n  isApiReady: boolean;\n  polkadotjsUrl: string;\n  configs: Configs;\n}\n\nexport enum ChainDetails {\n  SOURCE = 'sourceChainDetails',\n  TARGET = 'targetChainDetails'\n}\nexport interface SourceState {\n  sourceConfigs: Configs;\n  sourceApiConnection: ApiPromiseConnectionType;\n  sourceChain: string;\n  sourcePolkadotjsUrl: string;\n}\n\nexport interface TargetState {\n  targetConfigs: Configs;\n  targetApiConnection: ApiPromiseConnectionType;\n  targetChain: string;\n  targetPolkadotjsUrl: string;\n}\n\nexport interface SourceTargetState {\n  [ChainDetails.SOURCE]: SourceState;\n  [ChainDetails.TARGET]: TargetState;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SourceTargetActionsTypes } from '../actions/sourceTargetActions';\nimport { ChainDetails, SourceTargetAction, SourceTargetState } from '../types/sourceTargetTypes';\n\nexport default function sourceTargetReducer(state: SourceTargetState, action: SourceTargetAction): SourceTargetState {\n  switch (action.type) {\n    case SourceTargetActionsTypes.SWAP_CHAINS: {\n      if (action.payload!.chain !== state[ChainDetails.SOURCE].sourceChain) {\n        return {\n          [ChainDetails.SOURCE]: {\n            sourceApiConnection: state[ChainDetails.TARGET].targetApiConnection,\n            sourceConfigs: state[ChainDetails.TARGET].targetConfigs,\n            sourceChain: state[ChainDetails.TARGET].targetChain,\n            sourcePolkadotjsUrl: state[ChainDetails.TARGET].targetPolkadotjsUrl\n          },\n          [ChainDetails.TARGET]: {\n            targetApiConnection: state[ChainDetails.SOURCE].sourceApiConnection,\n            targetChain: state[ChainDetails.SOURCE].sourceChain,\n            targetPolkadotjsUrl: state[ChainDetails.SOURCE].sourcePolkadotjsUrl,\n            targetConfigs: state[ChainDetails.SOURCE].sourceConfigs\n          }\n        };\n      }\n      return state;\n    }\n    default: {\n      throw new Error(`Unhandled type: ${action.type}`);\n    }\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useReducer } from 'react';\nimport sourceTargetReducer from '../reducers/sourceTargetReducer';\nimport { SourceTargetAction, SourceTargetState } from '../types/sourceTargetTypes';\n\nexport interface UpdateSourceTargetContext {\n  dispatchChangeSourceTarget: React.Dispatch<SourceTargetAction>;\n}\n\nexport interface SourceTargetContextProps {\n  connections: SourceTargetState;\n  children: React.ReactElement;\n}\n\nexport const SourceTargetContext: React.Context<SourceTargetState> = React.createContext({} as SourceTargetState);\n\nexport function useSourceTarget() {\n  return useContext(SourceTargetContext);\n}\n\nexport const UpdateSourceTargetContext: React.Context<UpdateSourceTargetContext> = React.createContext(\n  {} as UpdateSourceTargetContext\n);\n\nexport function useUpdateSourceTarget() {\n  return useContext(UpdateSourceTargetContext);\n}\n\nexport function SourceTargetContextProvider({ connections, children }: SourceTargetContextProps): React.ReactElement {\n  const [sourceTargetChains, dispatchChangeSourceTarget] = useReducer(sourceTargetReducer, connections);\n\n  return (\n    <SourceTargetContext.Provider value={sourceTargetChains}>\n      <UpdateSourceTargetContext.Provider value={{ dispatchChangeSourceTarget }}>\n        {children}\n      </UpdateSourceTargetContext.Provider>\n    </SourceTargetContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport winston from 'winston';\n\nwinston.addColors({\n  debug: 'grey',\n  error: 'red',\n  info: 'green',\n  warn: 'blue'\n});\n\nconst myformat = winston.format.cli({\n  all: true\n});\n\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console({\n      format: myformat\n    })\n  ]\n});\n\nexport default logger;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { useEffect, useState } from 'react';\n\nimport logger from '../util/logger';\n\ninterface Props {\n  chain: string;\n  api: ApiPromise;\n  isApiReady: boolean;\n}\n\nconst useBlocksInfo = ({ isApiReady, api, chain }: Props) => {\n  const [bestBlock, setBestBlock] = useState('');\n  const [bestBlockFinalized, setBestBlockFinalized] = useState('');\n\n  useEffect(() => {\n    if (!api || !isApiReady || !chain) {\n      setBestBlock('');\n      setBestBlockFinalized('');\n      return;\n    }\n\n    let unsubscribeBestNumber: () => void;\n    api.derive.chain\n      .bestNumber((res) => {\n        setBestBlock(res.toString());\n      })\n      .then((unsub) => {\n        unsubscribeBestNumber = unsub;\n      })\n      .catch((e) => logger.error('error reading blocks', e));\n\n    let unsubscribeBestNumberFinalized: () => void;\n    api.derive.chain\n      .bestNumberFinalized((res) => {\n        setBestBlockFinalized(res.toString());\n      })\n      .then((unsub) => {\n        unsubscribeBestNumberFinalized = unsub;\n      })\n      .catch((e) => logger.error('error reading blocks', e));\n\n    return function cleanup() {\n      unsubscribeBestNumberFinalized && unsubscribeBestNumberFinalized();\n      unsubscribeBestNumber && unsubscribeBestNumber();\n    };\n  }, [api, isApiReady, chain]);\n\n  return { bestBlock, bestBlockFinalized };\n};\n\nexport default useBlocksInfo;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport default function getSubstrateDynamicNames(key: string) {\n  const bridgedGrandpaChain = `bridge${key}Grandpa`;\n  const bridgedMessages = `bridge${key}Messages`;\n  const estimatedFeeMethodName = `To${key}OutboundLaneApi_estimate_message_delivery_and_dispatch_fee`;\n  const latestReceivedNonceMethodName = `From${key}InboundLaneApi_latest_received_nonce`;\n\n  const storageKey = `${key}-bridge-ui-transactions`;\n\n  return {\n    bridgedGrandpaChain,\n    bridgedMessages,\n    estimatedFeeMethodName,\n    latestReceivedNonceMethodName,\n    storageKey\n  };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { VoidFn } from '@polkadot/api/types';\nimport { Hash } from '@polkadot/types/interfaces';\nimport { Codec } from '@polkadot/types/types';\nimport BN from 'bn.js';\nimport { useEffect, useState } from 'react';\n\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\ninterface HeaderId {\n  number: BN;\n  hash: Hash;\n}\n\ntype CodecHeaderId = Codec & HeaderId;\n\ninterface Props {\n  chain: string;\n  api: ApiPromise;\n  isApiReady: boolean;\n}\n\nconst useBridgedBlocks = ({ isApiReady, api, chain }: Props) => {\n  const [bestBridgedFinalizedBlock, setBestBridgedFinalizedBlock] = useState('');\n\n  const { bridgedGrandpaChain } = getSubstrateDynamicNames(chain);\n  useEffect((): (() => void) | undefined => {\n    const shouldProceed: boolean = !!(api && isApiReady && chain);\n    if (!shouldProceed) return;\n\n    let unsubImportedHeaders: Promise<VoidFn> | null;\n    const unsubBestFinalized: Promise<VoidFn> | null = api.query[bridgedGrandpaChain].bestFinalized(\n      (res: CodecHeaderId) => {\n        const bestBridgedFinalizedBlock = res.toString();\n        unsubImportedHeaders = api.query[bridgedGrandpaChain].importedHeaders(bestBridgedFinalizedBlock, (res: any) => {\n          if (res.toJSON()) {\n            setBestBridgedFinalizedBlock(res.toJSON().number);\n          }\n        });\n      }\n    );\n\n    return async (): Promise<void> => {\n      unsubBestFinalized && (await unsubBestFinalized)();\n      unsubImportedHeaders && (await unsubImportedHeaders)();\n    };\n  }, [isApiReady, chain, api, bridgedGrandpaChain]);\n\n  return { bestBridgedFinalizedBlock };\n};\n\nexport default useBridgedBlocks;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useEffect, useRef, useCallback } from 'react';\n\nexport const useIsMounted = () => {\n  const mountedRef = useRef(false);\n  const isMounted = useCallback(() => mountedRef.current, []);\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return isMounted;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useCallback, useState } from 'react';\nimport { useIsMounted } from './useIsMounted';\n\n/**\n * Like React's [useState](https://reactjs.org/docs/hooks-reference.html#usestate)\n * but it makes sure the component that uses this state hook is mounted before updating state\n * @param {D} initialValue\n * @returns {[D, Dispatch<D>]} an array of 2 items\n * the first is the current state, the second is a function that enables\n * updating the state if the component is not mounted\n *\n * D is the type passed when then useMountedState is used\n * e.g. const [pass, setPass] = useMountedState<string>('someString');\n */\nexport const useMountedState = <D>(initialState: D | (() => D)) => {\n  const isMounted = useIsMounted();\n\n  const [state, setState] = useState<D>(initialState);\n\n  const setMountedState = useCallback(\n    (value: D) => {\n      if (isMounted()) {\n        setState(value);\n      }\n    },\n    [isMounted]\n  );\n\n  return [state, setMountedState] as const;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { VoidFn } from '@polkadot/api/types';\nimport BN from 'bn.js';\nimport { useEffect } from 'react';\n\nimport { useMountedState } from '../hooks/useMountedState';\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport logger from '../util/logger';\n\nimport useLaneId from '../hooks/useLaneId';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\ninterface Props {\n  chain: string;\n  api: ApiPromise;\n  isApiReady: boolean;\n}\n\ninterface Output {\n  inboundLanes: {\n    bridgeReceivedMessages: string;\n  };\n  outboundLanes: {\n    pendingMessages: string;\n    totalMessages: string;\n    latestReceivedNonce: string;\n  };\n}\n\nconst useMessageLane = ({ isApiReady, api, chain }: Props): Output => {\n  const { dispatchMessage } = useUpdateMessageContext();\n  const [outboundLanes, setOutboudLanes] = useMountedState({\n    latestReceivedNonce: '0',\n    pendingMessages: '0',\n    totalMessages: '0'\n  });\n  const [inboundLanes, setInboudLanes] = useMountedState({ bridgeReceivedMessages: '0' });\n\n  const laneId = useLaneId();\n  const { bridgedMessages, latestReceivedNonceMethodName } = getSubstrateDynamicNames(chain);\n\n  useEffect((): (() => void) => {\n    const getLane = async (setter: any, isOutbound?: boolean) => {\n      try {\n        if (isOutbound) {\n          const u = await api.query[bridgedMessages].outboundLanes(laneId, (res: any) => {\n            const latest_generated_nonce = res.get('latest_generated_nonce').toString();\n            const latest_received_nonce = res.get('latest_received_nonce').toString();\n            const pendingMessages = new BN(latest_generated_nonce).sub(new BN(latest_received_nonce));\n\n            setter({\n              latestReceivedNonce: latest_received_nonce.toString(),\n              pendingMessages: pendingMessages.isNeg() ? '0' : pendingMessages.toString(),\n              totalMessages: latest_generated_nonce\n            });\n          });\n          return Promise.resolve(u);\n        }\n        const u = await api.query[bridgedMessages].inboundLanes(laneId, (res: any) => {\n          setter({ bridgeReceivedMessages: res.get('last_confirmed_nonce').toString() });\n        });\n        return Promise.resolve(u);\n      } catch (e) {\n        dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e.message }));\n        logger.error(e.message);\n        return Promise.reject();\n      }\n    };\n\n    const shouldGetLane: boolean = !!(api && isApiReady && api.query[bridgedMessages] && chain);\n    const unsubscribeOutboundLanes: Promise<VoidFn> | null = shouldGetLane ? getLane(setOutboudLanes, true) : null;\n    const unsubscribeInboundLanes: Promise<VoidFn> | null = shouldGetLane ? getLane(setInboudLanes) : null;\n\n    return async (): Promise<void> => {\n      unsubscribeOutboundLanes && (await unsubscribeOutboundLanes)();\n      unsubscribeInboundLanes && (await unsubscribeInboundLanes)();\n    };\n  }, [\n    api,\n    isApiReady,\n    chain,\n    bridgedMessages,\n    laneId,\n    latestReceivedNonceMethodName,\n    setOutboudLanes,\n    setInboudLanes,\n    dispatchMessage\n  ]);\n\n  return { inboundLanes, outboundLanes };\n};\n\nexport default useMessageLane;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nexport default function useLaneId(): string {\n  const laneId = process.env.REACT_APP_LANE_ID || '0x00000000';\n  // To complete with configuration logic once we will have different lane ids\n  return laneId;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ChainDetails } from '../types/sourceTargetTypes';\nimport useBlocksInfo from './useBlocksInfo';\nimport useBridgedBlocks from './useBridgedBlocks';\nimport useDashboardProfile from './useDashboardProfile';\nimport useMessagesLane from './useMessagesLane';\n\nconst useDashboard = (ChainDetail: ChainDetails) => {\n  const { api, destination, local, isApiReady, polkadotjsUrl } = useDashboardProfile(ChainDetail);\n\n  const blockInfo = useBlocksInfo({ api, chain: local, isApiReady });\n  const bridgedBlocks = useBridgedBlocks({ api, chain: destination, isApiReady });\n  const messagesLane = useMessagesLane({ api, chain: destination, isApiReady });\n\n  return { ...blockInfo, ...bridgedBlocks, ...messagesLane, local, polkadotjsUrl };\n};\n\nexport default useDashboard;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useEffect, useState } from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { ChainDetails } from '../types/sourceTargetTypes';\n\nexport default function useDashboardProfile(chainDetail: ChainDetails) {\n  const {\n    sourceChainDetails: { sourceApiConnection, sourceChain, sourcePolkadotjsUrl },\n    targetChainDetails: { targetApiConnection, targetChain, targetPolkadotjsUrl }\n  } = useSourceTarget();\n  const { isApiReady: isSourceApiReady, api: sourceApi } = sourceApiConnection;\n  const { isApiReady: isTargetApiReady, api: targetApi } = targetApiConnection;\n\n  const [profile, setProfile] = useState({\n    api: sourceApi,\n    destination: '',\n    isApiReady: isSourceApiReady,\n    local: '',\n    polkadotjsUrl: sourcePolkadotjsUrl\n  });\n\n  useEffect(() => {\n    let local = sourceChain;\n    let destination = targetChain;\n    let api = sourceApi;\n    let isApiReady = isSourceApiReady;\n    let polkadotjsUrl = sourcePolkadotjsUrl;\n    if (chainDetail === ChainDetails.TARGET) {\n      local = targetChain;\n      destination = sourceChain;\n      api = targetApi;\n      isApiReady = isTargetApiReady;\n      polkadotjsUrl = targetPolkadotjsUrl;\n    }\n\n    setProfile({ api, destination, isApiReady, local, polkadotjsUrl });\n  }, [\n    chainDetail,\n    isSourceApiReady,\n    isTargetApiReady,\n    sourceApi,\n    sourceChain,\n    sourcePolkadotjsUrl,\n    targetApi,\n    targetChain,\n    targetPolkadotjsUrl\n  ]);\n\n  return profile;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\n\ninterface LoadingStates {\n  areApiReady: boolean;\n  sourceReady: boolean;\n  targetReady: boolean;\n}\n\nexport default function useLoadingApi(): LoadingStates {\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { isApiReady: isSourceApiReady }\n    },\n    targetChainDetails: {\n      targetApiConnection: { isApiReady: isTargetApiReady }\n    }\n  } = useSourceTarget();\n\n  return {\n    areApiReady: isSourceApiReady && isTargetApiReady,\n    sourceReady: isSourceApiReady,\n    targetReady: isTargetApiReady\n  };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { GENERIC, GENERIC_SUBSTRATE_PREFIX } from '../constants';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\n\nconst useChainGetters = () => {\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi },\n      sourceChain,\n      sourceConfigs: { ss58Format: sourceSS58Format }\n    },\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi },\n      targetChain,\n      targetConfigs: { ss58Format: targetSS58Format }\n    }\n  } = useSourceTarget();\n\n  const getValuesByChain = (chain: string) => {\n    switch (chain) {\n      case sourceChain:\n        return { ss58Format: sourceSS58Format, api: sourceApi };\n      case targetChain:\n        return { ss58Format: targetSS58Format, api: targetApi };\n      case GENERIC:\n        return { ss58Format: GENERIC_SUBSTRATE_PREFIX, api: {} as ApiPromise };\n      default:\n        throw new Error(`Unknown type: ${chain}`);\n    }\n  };\n\n  const getChainBySS58Prefix = (prefix: string) => {\n    const intPrefix: number = parseInt(prefix, 10);\n    switch (intPrefix) {\n      case GENERIC_SUBSTRATE_PREFIX:\n        return GENERIC;\n      case targetSS58Format:\n        return targetChain;\n      case sourceSS58Format:\n        return sourceChain;\n      default:\n        return '';\n    }\n  };\n\n  return { getValuesByChain, getChainBySS58Prefix };\n};\n\nexport default useChainGetters;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ChainDetails } from '../types/sourceTargetTypes';\nimport { SourceTargetState } from '../types/sourceTargetTypes';\n\ninterface Input {\n  useSourceTarget: () => SourceTargetState;\n  sourceChain: string;\n}\n\nexport function getSourceTargetRole({ useSourceTarget, sourceChain }: Input) {\n  const {\n    sourceChainDetails: { sourceChain: currentSourceChain }\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n  } = useSourceTarget();\n\n  const sourceChainsMatch = sourceChain === currentSourceChain;\n\n  const sourceRole = sourceChainsMatch ? ChainDetails.SOURCE : ChainDetails.TARGET;\n  const targetRole = sourceChainsMatch ? ChainDetails.TARGET : ChainDetails.SOURCE;\n\n  return { sourceRole, targetRole, sourceChainsMatch };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Codec } from '@polkadot/types/types';\n\nimport { useEffect } from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDashboard from './useDashboard';\nimport useLaneId from './useLaneId';\nimport useLoadingApi from './useLoadingApi';\nimport useChainGetters from './useChainGetters';\nimport { useMountedState } from './useMountedState';\n\nimport { isTransactionCompleted } from '../util/transactionUtils';\nimport { getSourceTargetRole } from '../util/chainsUtils';\nimport { TransactionStatusType } from '../types/transactionTypes';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\ninterface Props {\n  transaction: TransactionStatusType;\n}\n\nconst useTransactionNonces = ({ transaction }: Props) => {\n  const [nonceOfBestTargetBlock, setNonceOfBestTargetBlock] = useMountedState<null | number>(null);\n  const [nonceOfFinalTargetBlock, setNonceOfFinalTargetBlock] = useMountedState<null | number>(null);\n  const { getValuesByChain } = useChainGetters();\n\n  const laneId = useLaneId();\n  const { areApiReady } = useLoadingApi();\n  const { sourceChain, targetChain } = transaction;\n  const { targetRole } = getSourceTargetRole({\n    useSourceTarget,\n    sourceChain\n  });\n\n  const { bestBlockFinalized, bestBlock } = useDashboard(targetRole);\n\n  const { latestReceivedNonceMethodName } = getSubstrateDynamicNames(sourceChain);\n  const { api: targetApi } = getValuesByChain(targetChain);\n\n  useEffect(() => {\n    if (!areApiReady || !transaction || !transaction || isTransactionCompleted(transaction)) {\n      return;\n    }\n\n    const getLatestReceivedNonce = async (blockNumber: string) => {\n      const blockHash = await targetApi.rpc.chain.getBlockHash(blockNumber);\n      const latestReceivedNonceCall = await targetApi.rpc.state.call<Codec>(\n        latestReceivedNonceMethodName,\n        laneId,\n        blockHash.toJSON()\n      );\n\n      // @ts-ignore\n      const latestReceivedNonceCallType = targetApi.registry.createType('MessageNonce', latestReceivedNonceCall);\n      const latestReceivedNonce = latestReceivedNonceCallType.toString();\n      return parseInt(latestReceivedNonce);\n    };\n\n    const updateNonces = async () => {\n      const finalizedNonce = getLatestReceivedNonce(bestBlockFinalized);\n      const bestNonce = getLatestReceivedNonce(bestBlock);\n\n      setNonceOfBestTargetBlock(await bestNonce);\n      setNonceOfFinalTargetBlock(await finalizedNonce);\n    };\n\n    updateNonces();\n  }, [\n    areApiReady,\n    transaction,\n    laneId,\n    latestReceivedNonceMethodName,\n    targetApi.registry,\n    targetApi.rpc.chain,\n    targetApi.rpc.state,\n    setNonceOfBestTargetBlock,\n    setNonceOfFinalTargetBlock,\n    bestBlock,\n    bestBlockFinalized\n  ]);\n\n  return { nonceOfBestTargetBlock, nonceOfFinalTargetBlock };\n};\n\nexport default useTransactionNonces;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionStatusType, TransactionStatusEnum } from '../types/transactionTypes';\n\nexport function isTransactionCompleted(transaction: TransactionStatusType): boolean {\n  return transaction.status === TransactionStatusEnum.COMPLETED;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport BN from 'bn.js';\nimport { useEffect, useState } from 'react';\nimport useTransactionNonces from '../hooks/useTransactionNonces';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDashboard from '../hooks/useDashboard';\n\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { getSourceTargetRole } from '../util/chainsUtils';\nimport { Step, TransactionStatusEnum, TransactionStatusType } from '../types/transactionTypes';\n\ninterface Props {\n  transaction: TransactionStatusType;\n  onComplete: () => void;\n}\n\nconst useTransactionSteps = ({ transaction, onComplete }: Props) => {\n  const [steps, setSteps] = useState<Array<Step>>([]);\n  const [deliveryBlock, setDeliveryBlock] = useState<string | null>();\n  const [finished, setFinished] = useState(false);\n\n  const { nonceOfBestTargetBlock, nonceOfFinalTargetBlock } = useTransactionNonces({\n    transaction\n  });\n\n  const { areApiReady } = useLoadingApi();\n\n  const { sourceChain, targetChain } = transaction;\n  const { sourceRole, targetRole } = getSourceTargetRole({\n    useSourceTarget,\n    sourceChain\n  });\n\n  const {\n    bestBlockFinalized,\n    outboundLanes: { latestReceivedNonce: latestReceivedNonceOnSource }\n  } = useDashboard(sourceRole);\n  const {\n    bestBridgedFinalizedBlock: bestBridgedFinalizedBlockOnTarget,\n    bestBlockFinalized: bestBlockFinalizedOnTarget,\n    bestBlock: bestBlockOnTarget\n  } = useDashboard(targetRole);\n\n  useEffect(() => {\n    if (!areApiReady || !transaction || finished) {\n      return;\n    }\n\n    const stepEvaluator = (transactionValue: string | number | null, chainValue: string | number | null): boolean => {\n      if (!transactionValue || !chainValue) return false;\n\n      const bnChainValue = new BN(chainValue);\n      const bnTransactionValue = new BN(transactionValue);\n\n      return bnChainValue.gte(bnTransactionValue);\n    };\n\n    const completionStatus = (isCompleted: boolean): TransactionStatusEnum => {\n      if (transaction.id === 0) {\n        return TransactionStatusEnum.NOT_STARTED;\n      }\n      return isCompleted ? TransactionStatusEnum.COMPLETED : TransactionStatusEnum.IN_PROGRESS;\n    };\n\n    // 1. We wait until the block transaction gets finalized  ( source.bestBlockFinalized is greater or equal to transaction.block )\n    const sourceTransactionFinalized = stepEvaluator(transaction.block, bestBlockFinalized);\n    // 2. When the target chain knows about a bigger source block number we infer that transaction block was realayed to target chain.\n    const blockFinalityRelayed = stepEvaluator(transaction.block, bestBridgedFinalizedBlockOnTarget);\n    // 3.1 We read the latest received nonce of the target chain rpc state call.\n    // 3.2 With the value obtained we compare it with the transaction nonce, if the value is bigger or equal then means target chain is aware about this nonce.\n    const messageDelivered = stepEvaluator(transaction.messageNonce, nonceOfBestTargetBlock);\n    // 4.1 *\n    // 4.2 We match the transaction nonce with the current nonce of the best finalized target block\n    const messageFinalizedOnTarget = stepEvaluator(transaction.messageNonce, nonceOfFinalTargetBlock);\n\n    // 5. Once the source chain is confirms through the latestReceivedNonceOnSource, that target chain is aware about the message nonce, the transaction is completed.\n    const sourceConfirmationReceived = stepEvaluator(transaction.messageNonce, latestReceivedNonceOnSource);\n    const onChainCompleted = (value: boolean) => completionStatus(value) === TransactionStatusEnum.COMPLETED;\n\n    // 4.1 * We catch the best block on target related to the message delivery.\n    if (messageDelivered && !deliveryBlock) {\n      setDeliveryBlock(bestBlockOnTarget);\n    }\n\n    setSteps([\n      {\n        chainType: sourceChain,\n        label: 'Include message in block',\n        labelOnChain: transaction.block,\n        status: completionStatus(!!transaction.block)\n      },\n      {\n        chainType: sourceChain,\n        label: 'Finalize block',\n        status: completionStatus(sourceTransactionFinalized)\n      },\n      {\n        chainType: targetChain,\n        label: 'Relay block',\n        status: completionStatus(blockFinalityRelayed)\n      },\n      {\n        chainType: targetChain,\n        label: 'Deliver message in target block',\n        labelOnChain: onChainCompleted(messageDelivered) && deliveryBlock,\n        status: completionStatus(messageDelivered)\n      },\n      {\n        chainType: targetChain,\n        label: 'Finalize message',\n        status: completionStatus(messageFinalizedOnTarget)\n      },\n      {\n        chainType: sourceChain,\n        label: 'Confirm delivery',\n        status: completionStatus(sourceConfirmationReceived)\n      }\n    ]);\n\n    if (sourceConfirmationReceived) {\n      onComplete();\n      setFinished(true);\n    }\n  }, [\n    areApiReady,\n    bestBlockFinalized,\n    bestBlockFinalizedOnTarget,\n    bestBlockOnTarget,\n    bestBridgedFinalizedBlockOnTarget,\n    deliveryBlock,\n    finished,\n    latestReceivedNonceOnSource,\n    nonceOfBestTargetBlock,\n    nonceOfFinalTargetBlock,\n    onComplete,\n    setDeliveryBlock,\n    sourceChain,\n    targetChain,\n    transaction\n  ]);\n\n  return steps;\n};\n\nexport default useTransactionSteps;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\nimport { Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport { ButtonSwitchMode } from './Buttons';\nimport { IconTxStatus } from './Icons';\nimport useTransactionSteps from '../hooks/useTransactionSteps';\nimport { TransactionStatusType } from '../types/transactionTypes';\nexport interface TransactionDisplayProps {\n  size?: 'sm';\n}\ninterface Props {\n  transaction: TransactionStatusType;\n  onComplete: () => void;\n  transactionDisplayProps?: TransactionDisplayProps;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    '& p': {\n      ...theme.typography.body2\n    },\n    '& svg': {\n      marginBottom: '-0.2em',\n      fontSize: '1.2em',\n      marginRight: theme.spacing()\n    },\n    '& .header': {\n      fontWeight: 500\n    },\n    '&.MuiPaper-root': {\n      maxWidth: '100%',\n      padding: theme.spacing(2),\n      borderRadius: theme.spacing(1.5)\n    }\n  }\n}));\n\nconst TransactionStatus = ({ transaction, onComplete, transactionDisplayProps }: Props) => {\n  const classes = useStyles();\n  const steps = useTransactionSteps({ transaction, onComplete });\n\n  return (\n    <>\n      <Box mt={2}>\n        <ButtonSwitchMode disabled> Payload</ButtonSwitchMode>\n        <ButtonSwitchMode color=\"primary\"> Receipt</ButtonSwitchMode>\n        <ButtonSwitchMode disabled> Human</ButtonSwitchMode>\n      </Box>\n      <Card elevation={transactionDisplayProps?.size === 'sm' ? 23 : 24} className={classes.card}>\n        <Box className=\"header\" component=\"p\">\n          <IconTxStatus status={transaction.status} /> {transaction.type} {transaction.sourceChain} {'->'}{' '}\n          {transaction.targetChain}\n        </Box>\n        {steps.map(({ chainType, label, labelOnChain, status }, idx) => (\n          <p key={idx}>\n            <IconTxStatus status={status} /> {chainType}: {label}&nbsp;\n            {labelOnChain && (\n              <Box pt={0.25} pb={0.25} pl={0.5} pr={0.5} component=\"span\" border={1} borderRadius={6}>\n                <Typography component=\"span\" variant=\"subtitle2\">\n                  {labelOnChain}\n                </Typography>\n              </Box>\n            )}\n          </p>\n        ))}\n      </Card>\n    </>\n  );\n};\n\nexport default TransactionStatus;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from 'react';\n\nimport { Box, Card, makeStyles, Typography } from '@material-ui/core';\nimport { ButtonSwitchMode } from './Buttons';\nimport { IconTxStatus } from './Icons';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { Step, TransactionStatusEnum } from '../types/transactionTypes';\n\ninterface Props {\n  type?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    '& p': {\n      ...theme.typography.body2\n    },\n    '& svg': {\n      marginBottom: '-0.2em',\n      fontSize: '1.2em',\n      marginRight: theme.spacing()\n    },\n    '& .header': {\n      fontWeight: 500\n    },\n    '&.MuiPaper-root': {\n      maxWidth: '100%',\n      padding: theme.spacing(2),\n      borderRadius: theme.spacing(1.5)\n    }\n  }\n}));\n\nconst TransactionStatusMock = ({ type }: Props) => {\n  const classes = useStyles();\n  const [steps, setSteps] = useState<Array<Step>>([]);\n\n  const {\n    sourceChainDetails: { sourceChain },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n\n  useEffect(() => {\n    setSteps([\n      {\n        chainType: sourceChain,\n        label: 'Include message in block',\n        labelOnChain: '',\n        status: TransactionStatusEnum.NOT_STARTED\n      },\n      {\n        chainType: sourceChain,\n        label: 'Finalise block',\n        status: TransactionStatusEnum.NOT_STARTED\n      },\n      {\n        chainType: targetChain,\n        label: 'Relay block',\n        status: TransactionStatusEnum.NOT_STARTED\n      },\n      {\n        chainType: targetChain,\n        label: 'Deliver message',\n        labelOnChain: '',\n        status: TransactionStatusEnum.NOT_STARTED\n      },\n      {\n        chainType: targetChain,\n        label: 'Finalise message in target block',\n        labelOnChain: '',\n        status: TransactionStatusEnum.NOT_STARTED\n      },\n      {\n        chainType: sourceChain,\n        label: 'Confirm delivery',\n        status: TransactionStatusEnum.NOT_STARTED\n      }\n    ]);\n  }, [sourceChain, targetChain]);\n\n  return (\n    <>\n      <ButtonSwitchMode disabled> Payload</ButtonSwitchMode>\n      <ButtonSwitchMode color=\"primary\"> Receipt</ButtonSwitchMode>\n      <ButtonSwitchMode disabled> Human</ButtonSwitchMode>\n      <Card elevation={24} className={classes.card}>\n        <Box className=\"header\" component=\"p\">\n          <IconTxStatus status={TransactionStatusEnum.NOT_STARTED} /> {type} {sourceChain} {'->'} {targetChain}\n        </Box>\n        {steps.map(({ chainType, label, labelOnChain, status }, idx) => (\n          <p key={idx}>\n            <IconTxStatus status={status} /> {chainType}: {label}&nbsp;\n            {labelOnChain && (\n              <Box pt={0.25} pb={0.25} pl={0.5} pr={0.5} component=\"span\" border={1} borderRadius={6}>\n                <Typography component=\"span\" variant=\"subtitle2\">\n                  {labelOnChain}\n                </Typography>\n              </Box>\n            )}\n          </p>\n        ))}\n      </Card>\n    </>\n  );\n};\n\nexport default TransactionStatusMock;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport { TransactionStatusEnum, TransactionStatusType } from '../types/transactionTypes';\nimport shortenItem from '../util/shortenItem';\nimport TransactionStatus, { TransactionDisplayProps } from './TransactionStatus';\nimport TransactionStatusMock from './TransactionStatusMock';\n\ninterface Props extends TransactionDisplayProps {\n  type?: string;\n}\n\nconst Transactions = ({ type, ...transactionDisplayProps }: Props) => {\n  const { transactions } = useTransactionContext();\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const { dispatchMessage } = useUpdateMessageContext();\n\n  return (\n    <>\n      {transactions.length ? (\n        transactions.map((transaction: TransactionStatusType) => {\n          const onComplete = () => {\n            dispatchTransaction(\n              TransactionActionCreators.updateTransactionStatus(\n                { status: TransactionStatusEnum.COMPLETED },\n                transaction.id\n              )\n            );\n            dispatchMessage(\n              MessageActionsCreators.triggerSuccessMessage({\n                message: `Transaction: ${shortenItem(transaction.blockHash)} is completed`\n              })\n            );\n          };\n          return (\n            <TransactionStatus\n              key={transaction.id}\n              transaction={transaction}\n              onComplete={onComplete}\n              transactionDisplayProps={{ ...transactionDisplayProps }}\n            />\n          );\n        })\n      ) : (\n        <TransactionStatusMock type={type} />\n      )}\n    </>\n  );\n};\n\nexport default Transactions;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Fade, IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback } from 'react';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HistoryIcon from '@material-ui/icons/History';\nimport Transactions from './Transactions';\nimport { useGUIContext } from '../contexts/GUIContextProvider';\nimport { ButtonDrawerMenu } from './Buttons';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    position: 'absolute',\n    top: 0,\n    left: 200,\n    width: 400,\n    height: '100vh',\n    padding: theme.spacing(2),\n    paddingLeft: theme.spacing(5),\n    paddingTop: theme.spacing(5),\n    overflow: 'auto',\n    '-ms-overflow-style': 'none',\n    'scrollbar-width': 'none',\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    }\n  },\n  closeDrawerIcon: {\n    position: 'fixed',\n    backgroundColor: theme.palette.background.paper,\n    marginLeft: 296,\n    marginTop: theme.spacing(-4)\n  }\n}));\n\nexport const StorageDrawer = () => {\n  const classes = useStyles();\n  const { drawer, setDrawer } = useGUIContext();\n\n  const handleDrawerOpen = useCallback(() => setDrawer(`${drawer === 'open' ? '' : 'open'}`), [drawer, setDrawer]);\n  const handleDrawerClose = useCallback(() => setDrawer(''), [setDrawer]);\n\n  return (\n    <Box mt={4}>\n      <ButtonDrawerMenu\n        startIcon={<HistoryIcon />}\n        onClick={handleDrawerOpen}\n        color={drawer === 'open' ? 'primary' : 'secondary'}\n      >\n        History\n      </ButtonDrawerMenu>\n      <Fade in={drawer === 'open'} timeout={{ enter: 300, exit: 0 }}>\n        <div className={classes.drawer}>\n          <IconButton onClick={handleDrawerClose} color=\"secondary\" className={classes.closeDrawerIcon}>\n            <CloseIcon />\n          </IconButton>\n          <Transactions size=\"sm\" />\n        </div>\n      </Fade>\n    </Box>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Theme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\ninterface SelectLabelProps {\n  children: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  selectLabel: {\n    ...theme.typography.h4,\n    color: theme.palette.text.hint,\n    marginBottom: theme.spacing()\n  }\n}));\n\nexport const styleAccountCompanion = (theme: Theme) => {\n  return {\n    marginTop: -1,\n    padding: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1.25),\n    paddingRight: theme.spacing(3),\n    border: `1px solid ${theme.palette.divider}`,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderRadius: theme.spacing(1.5)\n  };\n};\n\nexport const SelectLabel = ({ children }: SelectLabelProps) => {\n  const classes = useStyles();\n  return <div className={classes.selectLabel}>{children}</div>;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport grey from '@material-ui/core/colors/grey';\nimport red from '@material-ui/core/colors/red';\nimport { ThemeOptions } from '@material-ui/core/styles';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\nimport { Shadows } from '@material-ui/core/styles/shadows';\n\nexport const bridgesBlue = {\n  100: '#2E99E5',\n  300: '#2E99E5',\n  400: '#2E99E5',\n  500: '#2E99E5'\n};\nexport const substrateGray = {\n  50: '#FCFCFC',\n  100: '#F1F5F7',\n  150: '#F0F2F5',\n  200: '#EAEEF1',\n  400: '#C6D0D7',\n  500: '#ABB8BF',\n  700: '#556068',\n  600: '#7E8D95',\n  800: '#323F47',\n  900: '#202B33'\n};\nexport const substrateGreen = {\n  100: '#7E8D96',\n  200: '#5CFFC8',\n  300: '#18FFB2',\n  400: '#16DB9A',\n  500: '#11B37C',\n  600: '#1A9A6C'\n};\n\nconst paletteLight: PaletteOptions = {\n  type: 'light',\n  common: {\n    black: 'black',\n    white: '#FFFFFF'\n  },\n  background: {\n    paper: '#FFFFFF',\n    default: '#FFFFFF'\n  },\n  primary: {\n    light: bridgesBlue[100],\n    main: bridgesBlue[400],\n    dark: bridgesBlue[500],\n    contrastText: 'white'\n  },\n  secondary: {\n    light: substrateGray[100],\n    main: substrateGray[600],\n    dark: substrateGray[500],\n    contrastText: 'black'\n  },\n  error: {\n    light: red[100],\n    main: '#DC2200',\n    dark: red[500],\n    contrastText: 'black'\n  },\n  success: {\n    light: substrateGreen[100],\n    main: substrateGreen[400],\n    dark: substrateGreen[500],\n    contrastText: 'black'\n  },\n  text: {\n    primary: substrateGray[900],\n    secondary: bridgesBlue[400],\n    disabled: substrateGray[600],\n    hint: substrateGray[600]\n  },\n  action: {\n    active: bridgesBlue[300]\n  },\n  divider: grey[300]\n};\n\nconst shadows: Shadows = [\n  'none',\n  '0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)',\n  '0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)',\n  '0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)',\n  '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n  '0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)',\n  '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n  '0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)',\n  '0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)',\n  '0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)',\n  '0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)',\n  '0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)',\n  '0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)',\n  '0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)',\n  '0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)',\n  '0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)',\n  '0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)',\n  '0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)',\n  '0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)',\n  '0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)',\n  '0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)',\n  '0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)',\n  '0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)',\n  '0px 32px 24px rgb(0 0 0 / 5%), 0px 16px 20px rgb(0 0 0 / 4%), 0px 12px 12px rgb(0 0 0 / 4%), 0px 6px 6px rgb(0 0 0 / 3%), 0px 3px 2px rgb(0 0 0 / 2%)',\n  '0px 100px 80px rgba(0, 0, 0, 0.07), 0px 40px 32px rgba(0, 0, 0, 0.05), 0px 20px 20px rgba(0, 0, 0, 0.04), 0px 12px 12px rgba(0, 0, 0, 0.04), 0px 6px 6px rgba(0, 0, 0, 0.03), 0px 3px 2px rgba(0, 0, 0, 0.02)'\n];\n\nexport const light: ThemeOptions = {\n  typography: {\n    allVariants: {\n      color: paletteLight.text && paletteLight.text.primary\n    },\n    fontFamily:\n      'Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, Segoe UI, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Web3-Regular\"',\n    h1: {\n      fontWeight: 500,\n      fontSize: 30,\n      lineHeight: '115%',\n      letterSpacing: '-0.02em'\n    },\n    h2: {\n      fontWeight: 600,\n      fontSize: 21,\n      lineHeight: '120%'\n    },\n    h3: {\n      fontWeight: 600,\n      fontSize: 18,\n      lineHeight: '120%'\n    },\n    h4: {\n      fontWeight: 500,\n      fontSize: 14,\n      lineHeight: '120%',\n      color: grey[800]\n    },\n    body1: {\n      fontWeight: 400,\n      fontSize: 14,\n      lineHeight: '140%',\n      color: grey[800]\n    },\n    body2: {\n      fontWeight: 400,\n      fontSize: 12,\n      lineHeight: '140%'\n    },\n    button: {\n      fontWeight: 500,\n      fontSize: 16,\n      lineHeight: '140%',\n      letterSpacing: 0.2,\n      textTransform: 'none'\n    },\n    subtitle1: {\n      fontFamily: 'SFMono-Regular, Consolas , Liberation Mono, Menlo, monospace',\n      fontWeight: 400,\n      fontSize: 20,\n      lineHeight: '120%'\n    },\n    subtitle2: {\n      fontFamily: 'SFMono-Regular, Consolas , Liberation Mono, Menlo, monospace',\n      fontWeight: 400,\n      fontSize: 11,\n      lineHeight: '135%',\n      color: grey[700],\n      letterSpacing: 0.1\n    },\n    overline: {\n      fontWeight: 500,\n      fontSize: 14,\n      letterSpacing: 0.3,\n      textTransform: 'uppercase'\n    }\n  },\n  palette: paletteLight,\n  shadows: shadows\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Container, Paper } from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { useGUIContext } from '../contexts/GUIContextProvider';\n\nimport { substrateGray } from './theme';\n\nconst useStyles = makeStyles((theme) => ({\n  ui: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: theme.spacing(3),\n    paddingLeft: 240 + theme.spacing(3),\n    transition: 'padding-left .1s',\n    '&.open': {\n      paddingLeft: 600 + theme.spacing(3),\n      [theme.breakpoints.down('md')]: {\n        paddingLeft: 240 + theme.spacing(3)\n      }\n    },\n    '& .MuiPaper-root, .MuiOutlinedInput-notchedOutline': {\n      borderRadius: theme.spacing(1.5)\n    },\n    '& > .MuiPaper-root': {\n      width: 480,\n      maxWidth: '100%',\n      padding: theme.spacing(2)\n    }\n  },\n  sidebar: {\n    position: 'fixed',\n    zIndex: 1,\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'column',\n    top: 0,\n    width: 240,\n    height: '100vh',\n    padding: theme.spacing(3),\n    backgroundColor: substrateGray[50],\n    borderRight: `1px solid ${fade(theme.palette.divider, 0.5)}`,\n    transition: 'width .1s, padding-right .1s',\n    '&.open': {\n      width: 600,\n      paddingRight: 360 + theme.spacing(3)\n    }\n  }\n}));\n\ninterface BoxUIProps {\n  children: React.ReactElement[] | React.ReactElement | string;\n}\n\nexport const BoxUI = ({ children }: BoxUIProps) => {\n  const classes = useStyles();\n  const { drawer } = useGUIContext();\n\n  return (\n    <Container className={`${classes.ui} ${drawer}`}>\n      <Paper elevation={24}>{children}</Paper>\n    </Container>\n  );\n};\n\nexport const BoxSidebar = ({ children }: BoxUIProps) => {\n  const classes = useStyles();\n  const { drawer } = useGUIContext();\n  return <div className={`${classes.sidebar} ${drawer}`}>{children}</div>;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ButtonBase, Popover } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport React, { Dispatch, SetStateAction, useEffect } from 'react';\n\n// As this is placed as a child in the Material UI Select component, for some reason style components classes are not working.\n// This way to inject the styles works.\nconst useStyles = makeStyles((theme) => ({\n  menu: {\n    background: theme.palette.secondary.light,\n    padding: theme.spacing(),\n    borderRadius: theme.spacing()\n  },\n  item: {\n    ...theme.typography.button,\n    display: 'flex',\n    margin: theme.spacing(0.2),\n    paddingLeft: theme.spacing(0.75),\n    paddingRight: theme.spacing(0.75),\n    borderRadius: theme.spacing(0.5),\n    '&:not(.current):hover': {\n      color: theme.palette.primary.contrastText,\n      background: theme.palette.primary.main\n    },\n    '&.current': {\n      marginBottom: theme.spacing(3),\n      color: theme.palette.text.hint,\n      '&:hover': {\n        color: theme.palette.secondary.contrastText,\n        background: theme.palette.secondary.light\n      }\n    },\n    '&.disabled': {\n      color: theme.palette.text.disabled,\n      pointerEvents: 'none'\n    }\n  }\n}));\n\ninterface MenuActionItemsProps {\n  idx: number;\n  title: string;\n  isEnabled: boolean;\n}\ninterface MenuActionProps {\n  items: Array<MenuActionItemsProps>;\n  menuIdx: number;\n  changeMenu: Dispatch<SetStateAction<number>>;\n}\n\nexport const MenuAction = ({ items, changeMenu, menuIdx }: MenuActionProps) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const [id, setId] = React.useState<string | undefined>(undefined);\n  const [open, setOpen] = React.useState<boolean>(false);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    setOpen(!open);\n  };\n\n  useEffect(() => {\n    setOpen(Boolean(anchorEl));\n    setId(anchorEl ? 'simple-popover' : undefined);\n  }, [anchorEl]);\n\n  return (\n    <>\n      <ButtonBase className={`${classes.item} current`} onClick={handleClick}>\n        {items[menuIdx]?.title || '-'}\n        <ArrowDropDownIcon />\n      </ButtonBase>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={() => setOpen(false)}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right'\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 24\n        }}\n        PaperProps={{\n          className: classes.menu\n        }}\n      >\n        {items.map((i, n) => (\n          <ButtonBase\n            className={`${classes.item} ${!i.isEnabled && 'disabled'}`}\n            key={n}\n            onClick={() => {\n              setOpen(!open);\n              changeMenu(i.idx);\n            }}\n          >\n            {i.title}\n          </ButtonBase>\n        ))}\n      </Popover>\n    </>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\nimport { Box, Divider, IconButton, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDashboard from '../hooks/useDashboard';\nimport { ChainDetails } from '../types/sourceTargetTypes';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { IconApiStatus } from './Icons';\n\n// As this is placed as a child in the Material UI Select component, for some reason style components classes are not working.\n// This way to inject the styles works.\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    position: 'relative',\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.spacing(0.5),\n    '& .MuiIconButton-root': {\n      backgroundColor: theme.palette.background.paper,\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: theme.spacing(-1.5),\n      width: theme.spacing(3),\n      height: theme.spacing(3),\n      margin: 'auto',\n      border: `1px solid ${theme.palette.divider}`\n    }\n  },\n  statsEntry: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingRight: theme.spacing(),\n    fontSize: theme.typography.subtitle2.fontSize,\n    '& span': {\n      ...theme.typography.subtitle2\n    }\n  },\n  svg: {\n    marginBottom: '0.2em',\n    fontSize: '0.5em',\n    marginRight: theme.spacing()\n  }\n}));\n\nexport const NetworkSides = () => {\n  const classes = useStyles();\n  const { sourceChainDetails, targetChainDetails } = useSourceTarget();\n  const dbSource = useDashboard(ChainDetails.SOURCE);\n  const dbTarget = useDashboard(ChainDetails.TARGET);\n  const { sourceReady, targetReady } = useLoadingApi();\n\n  return (\n    <Box marginY={2} className={classes.main}>\n      <Box p={1} className={classes.statsEntry}>\n        <Typography variant=\"h4\">\n          <IconApiStatus className={classes.svg} status={sourceReady} />\n          <a target=\"_blank\" rel=\"noreferrer\" href={sourceChainDetails.sourcePolkadotjsUrl}>\n            {sourceChainDetails.sourceChain}\n          </a>\n        </Typography>\n        <span># {dbSource.bestBlock}</span>\n      </Box>\n      <Divider />\n      <IconButton size=\"small\">\n        <ArrowDownwardIcon fontSize=\"small\" />\n      </IconButton>\n      <Box p={1} className={classes.statsEntry}>\n        <Typography variant=\"h4\">\n          <IconApiStatus className={classes.svg} status={targetReady} />\n          <a target=\"_blank\" rel=\"noreferrer\" href={targetChainDetails.targetPolkadotjsUrl}>\n            {targetChainDetails.targetChain}\n          </a>\n        </Typography>\n        <span style={{ opacity: 0.4 }}># {dbTarget.bestBlock}</span>\n      </Box>\n    </Box>\n  );\n};\n\nexport const NetworkStats = () => {\n  const classes = useStyles();\n  const dbSource = useDashboard(ChainDetails.SOURCE);\n  const dbTarget = useDashboard(ChainDetails.TARGET);\n\n  return (\n    <>\n      <Box className={classes.statsEntry}>\n        Relayed blocks:\n        <span>\n          {dbTarget?.bestBridgedFinalizedBlock} / {dbSource?.bestBlockFinalized}\n        </span>\n      </Box>\n      <Box className={classes.statsEntry}>\n        Delivered messages:\n        <span>{dbSource?.outboundLanes.totalMessages}</span>\n      </Box>\n      <Box className={classes.statsEntry}>\n        Awaiting messages:\n        <span>{dbSource?.outboundLanes.pendingMessages}</span>\n      </Box>\n    </>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport React from 'react';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nexport function Alert(props: JSX.IntrinsicAttributes & AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport { light } from '../components';\n\ninterface DrawerContextProps {\n  drawer: string;\n  setDrawer: React.Dispatch<React.SetStateAction<string>>;\n}\ninterface GUIContextProviderProps {\n  children: React.ReactElement;\n}\n\nconst DrawerContext = React.createContext({} as DrawerContextProps);\n\nexport function useGUIContext() {\n  return useContext(DrawerContext);\n}\n\nexport function GUIContextProvider({ children }: GUIContextProviderProps): React.ReactElement {\n  const [drawer, setDrawer] = useLocalStorage('storageDrawer');\n  const value = { drawer, setDrawer };\n\n  return (\n    <ThemeProvider theme={createMuiTheme(light)}>\n      <DrawerContext.Provider value={value}>{children}</DrawerContext.Provider>\n    </ThemeProvider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { KeyringPair } from '@polkadot/keyring/types';\n\nexport interface KeyringContextType {\n  accountExists: boolean;\n  extensionExists: boolean;\n  keyringPairs: Array<KeyringPair>;\n  keyringPairsReady: boolean;\n}\n\nexport enum KeyringStatuses {\n  INIT = 'INIT',\n  LOADING = 'LOADING',\n  READY = 'READY',\n  ERROR = 'ERROR'\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport keyring from '@polkadot/ui-keyring';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { KeyringContextType, KeyringStatuses } from '../types/keyringTypes';\nimport logger from '../util/logger';\n\ninterface KeyringContextProviderProps {\n  children: React.ReactElement;\n}\n\nexport const KeyringContext: React.Context<KeyringContextType> = React.createContext({} as KeyringContextType);\n\nexport function useKeyringContext() {\n  return useContext(KeyringContext);\n}\n\nexport function KeyringContextProvider(props: KeyringContextProviderProps): React.ReactElement {\n  const { children = null } = props;\n  const [keyringStatus, setKeyringStatus] = useState(KeyringStatuses.INIT);\n  const { dispatchMessage } = useUpdateMessageContext();\n  const [keyringPairs, setKeyringPairs] = useState<Array<KeyringPair>>([]);\n  const [keyringPairsReady, setkeyringPairsReady] = useState<boolean>(false);\n  const [extensionExists, setExtensionExists] = useState<boolean>(false);\n  const [accountExists, setAccountExists] = useState<boolean>(false);\n\n  const isDevelopment = Boolean(process.env.REACT_APP_KEYRING_DEV_LOAD_ACCOUNTS);\n\n  const loadAccounts = useCallback(() => {\n    const asyncLoadAccounts = async () => {\n      setKeyringStatus(KeyringStatuses.LOADING);\n      try {\n        const extExists = await web3Enable('Substrate Bridges UI');\n        if (extExists.length === 0) {\n          return;\n        } else {\n          setExtensionExists(true);\n        }\n        let allAccounts = await web3Accounts();\n        allAccounts?.length && setAccountExists(true);\n        allAccounts = allAccounts.map(({ address, meta }) => ({\n          address,\n          meta: { ...meta, name: `${meta.name}` }\n        }));\n\n        keyring.loadAll({ isDevelopment }, allAccounts);\n        setKeyringStatus(KeyringStatuses.READY);\n      } catch (e) {\n        dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e }));\n        logger.error(e);\n        setKeyringStatus(KeyringStatuses.ERROR);\n      }\n    };\n\n    if (keyringStatus === KeyringStatuses.LOADING || keyringStatus === KeyringStatuses.READY) return;\n\n    asyncLoadAccounts();\n  }, [dispatchMessage, isDevelopment, keyringStatus]);\n\n  useEffect(() => {\n    if (keyringStatus === KeyringStatuses.INIT) {\n      loadAccounts();\n    }\n  }, [keyringStatus, loadAccounts]);\n\n  useEffect(() => {\n    if (keyringStatus === KeyringStatuses.READY) {\n      const keyringOptions = keyring.getPairs();\n      setKeyringPairs(keyringOptions);\n      setkeyringPairsReady(true);\n    }\n  }, [keyringStatus]);\n\n  return (\n    <KeyringContext.Provider value={{ accountExists, extensionExists, keyringPairs, keyringPairsReady }}>\n      {children}\n    </KeyringContext.Provider>\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { Configs } from '../types/sourceTargetTypes';\n\nexport const getConfigs = async (apiPromise: ApiPromise): Promise<Configs> => {\n  const properties = apiPromise.registry.getChainProperties();\n  const { ss58Format } = properties!;\n  const systemChain = await apiPromise.rpc.system.name();\n  const chainName = systemChain.split(' ')[0];\n  const prop = await apiPromise.rpc.system.properties();\n  const bridgeIds = prop.get('bridgeIds');\n\n  return { bridgeIds, chainName, ss58Format: parseInt(ss58Format.toString()) };\n};\n\nexport const getBridgeId = (targetConfigs: Configs, chainName: string): number[] => {\n  const bridgeId = targetConfigs?.bridgeIds[chainName];\n\n  if (!bridgeId) {\n    throw new Error(\n      `Missing bridgeId for ${chainName} in bridge configuration of ${targetConfigs.chainName}. Add 'bridgeIds' to the chain spec.`\n    );\n  }\n\n  return bridgeId;\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { TypeRegistry } from '@polkadot/types';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { useEffect, useState } from 'react';\nimport { ApiPromiseConnectionType, Configs, ConnectionChainInformation } from '../types/sourceTargetTypes';\nimport logger from '../util/logger';\nimport { getConfigs } from '../util/getConfigs';\n\nexport const ApiPromiseContext: React.Context<ApiPromiseConnectionType> = React.createContext(\n  {} as ApiPromiseConnectionType\n);\n\nconst registry = new TypeRegistry();\n\ntype ConfigsType = {\n  configs: Configs;\n};\n\ntype PolkadotJsURL = {\n  polkadotjsUrl: string;\n};\n\ntype ConnectionType = ApiPromiseConnectionType & ConfigsType & PolkadotJsURL;\n\nexport function useApiConnection(connectionDetails: ConnectionChainInformation): ConnectionType {\n  const [apiPromise, setApiPromise] = useState<ApiPromise>({} as ApiPromise);\n  const [isReady, setIsReady] = useState(false);\n  const [configs, setConfigs] = useState<Configs>({} as Configs);\n  const { chainNumber, hasher, provider, types, polkadotjsUrl } = connectionDetails;\n\n  useEffect(() => {\n    ApiPromise.create({ hasher: hasher || undefined, provider, types })\n      .then((api): void => {\n        logger.info(`Chain ${chainNumber}: connection created.`);\n        setApiPromise(api);\n      })\n      .catch((err): void => {\n        logger.error(`Chain ${chainNumber}: Error creating connection. Details: ${err}`);\n      });\n  }, [chainNumber, hasher, provider, types]);\n\n  useEffect(() => {\n    !isReady &&\n      apiPromise &&\n      apiPromise.isReady &&\n      apiPromise.isReady\n        .then(() => {\n          if (types) {\n            registry.register(types);\n          }\n          logger.info(`Chain ${chainNumber}: types registration ready`);\n          setIsReady(true);\n        })\n        .catch((err): void => {\n          logger.error(`Chain ${chainNumber}: Error registering types. Details: ${err}`);\n        });\n  }, [apiPromise, apiPromise.isReady, chainNumber, isReady, types]);\n\n  useEffect(() => {\n    const getChainConfigs = async () => {\n      const values = await getConfigs(apiPromise);\n      setConfigs(values);\n    };\n\n    if (apiPromise.isReady && isEmpty(configs)) {\n      getChainConfigs();\n    }\n  }, [apiPromise, apiPromise.isReady, configs]);\n\n  return { api: apiPromise, isApiReady: isReady, configs, polkadotjsUrl };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { Codec } from '@polkadot/types/types';\nimport { compactAddLength } from '@polkadot/util';\nimport { useEffect, useState } from 'react';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useLaneId from '../hooks/useLaneId';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport useTransactionType from '../hooks/useTransactionType';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\nimport logger from '../util/logger';\n\ninterface Props {\n  input: string;\n  type: string;\n  weightInput?: string;\n  isValidCall?: boolean;\n}\n\ninterface FeeAndPayload {\n  payload: any;\n}\n\nexport default function useTransactionPreparation({\n  input,\n  type,\n  weightInput,\n  isValidCall = true\n}: Props): FeeAndPayload {\n  const areApiReady = useLoadingApi();\n  const laneId = useLaneId();\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi }\n    },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n  const { account } = useAccountContext();\n\n  const [payload, setPayload] = useState<null | {}>(null);\n  const { call, weight } = useTransactionType({ input, type, weightInput });\n\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const { estimatedFeeMethodName } = getSubstrateDynamicNames(targetChain);\n\n  useEffect(() => {\n    const calculateFee = async () => {\n      // Ignoring custom types missed for TS for now.\n      // Need to apply: https://polkadot.js.org/docs/api/start/typescript.user\n      // @ts-ignore\n      const payloadType = sourceApi.registry.createType('OutboundPayload', payload);\n      // @ts-ignore\n      const messageFeeType = sourceApi.registry.createType('MessageFeeData', {\n        lane_id: laneId,\n        payload: payloadType.toHex()\n      });\n\n      const estimatedFeeCall = await sourceApi.rpc.state.call<Codec>(estimatedFeeMethodName, messageFeeType.toHex());\n\n      // @ts-ignore\n      const estimatedFeeType = sourceApi.registry.createType('Option<Balance>', estimatedFeeCall);\n      const estimatedFee = estimatedFeeType.toString();\n\n      dispatchTransaction(TransactionActionCreators.estimateFee(estimatedFee));\n    };\n\n    if (areApiReady && payload) {\n      calculateFee();\n    }\n  }, [\n    areApiReady,\n    dispatchTransaction,\n    estimatedFeeMethodName,\n    laneId,\n    payload,\n    sourceApi.registry,\n    sourceApi.rpc.state,\n    targetChain\n  ]);\n\n  useEffect(() => {\n    if (!(isValidCall && account && call && weight)) {\n      return;\n    }\n\n    const payload = {\n      call: compactAddLength(call),\n      origin: {\n        SourceAccount: account.addressRaw\n      },\n      // TODO [#122] This must not be hardcoded.\n      spec_version: 1,\n      weight\n    };\n    // @ts-ignore\n    const payloadType = sourceApi.registry.createType('OutboundPayload', payload);\n    logger.info(`OutboundPayload: ${JSON.stringify(payload)}`);\n    logger.info(`OutboundPayload.toHex(): ${payloadType.toHex()}`);\n    setPayload(payload);\n  }, [account, call, isValidCall, type, weight, sourceApi.registry]);\n\n  return {\n    payload\n  };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { hexToU8a, isHex, u8aToHex } from '@polkadot/util';\nimport { useEffect, useState } from 'react';\n\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { TransactionTypes } from '../types/transactionTypes';\nimport logger from '../util/logger';\ninterface TransactionFunction {\n  call: Uint8Array | null;\n  weight: number | null;\n}\n\ninterface Props {\n  input: string;\n  type: string;\n  weightInput?: string;\n}\n\nexport default function useTransactionType({ input, type, weightInput }: Props): TransactionFunction {\n  const { areApiReady } = useLoadingApi();\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi }\n    },\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi }\n    }\n  } = useSourceTarget();\n\n  const { account } = useAccountContext();\n  const { receiverAddress } = useTransactionContext();\n\n  const [values, setValues] = useState<TransactionFunction>({\n    call: null,\n    weight: null\n  });\n\n  useEffect(() => {\n    async function getValues() {\n      let weight: number = 0;\n      let call: Uint8Array | null = null;\n\n      if (account) {\n        switch (type) {\n          case TransactionTypes.REMARK:\n            call = (await targetApi.tx.system.remark(input)).toU8a();\n            logger.info(`system::remark: ${u8aToHex(call)}`);\n            // TODO [#121] Figure out what the extra bytes are about\n            call = call.slice(2);\n            weight = (await targetApi.tx.system.remark(input).paymentInfo(account)).weight.toNumber();\n            break;\n          case TransactionTypes.TRANSFER:\n            if (receiverAddress) {\n              call = (await targetApi.tx.balances.transfer(receiverAddress, input)).toU8a();\n              logger.info(`balances::transfer: ${u8aToHex(call)}`);\n              // TODO [#121] Figure out what the extra bytes are about\n              call = call.slice(2);\n              weight = (\n                await targetApi.tx.balances.transfer(receiverAddress, input).paymentInfo(account)\n              ).weight.toNumber();\n            }\n            break;\n          case TransactionTypes.CUSTOM:\n            call = isHex(input) ? hexToU8a(input) : null;\n            weight = parseInt(weightInput!);\n            break;\n          default:\n            throw new Error(`Unknown type: ${type}`);\n        }\n        setValues({ call, weight });\n      }\n    }\n\n    if (areApiReady) {\n      getValues();\n    }\n  }, [account, areApiReady, input, receiverAddress, sourceApi, targetApi, type, weightInput]);\n\n  return values;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { SignerOptions } from '@polkadot/api/types';\nimport { web3FromSource } from '@polkadot/extension-dapp';\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport moment from 'moment';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext, useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useLaneId from '../hooks/useLaneId';\nimport useTransactionPreparation from '../hooks/useTransactionPreparation';\nimport { TransactionStatusEnum, TransactionTypes } from '../types/transactionTypes';\nimport getSubstrateDynamicNames from '../util/getSubstrateDynamicNames';\nimport logger from '../util/logger';\nimport useLoadingApi from '../hooks/useLoadingApi';\n\ninterface Props {\n  isValidCall?: boolean;\n  isRunning: boolean;\n  setIsRunning: (status: boolean) => void;\n  input: string;\n  type: string;\n  weightInput?: string;\n}\n\nfunction useSendMessage({ isRunning, isValidCall, setIsRunning, input, type, weightInput }: Props) {\n  const { estimatedFee, receiverAddress } = useTransactionContext();\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const laneId = useLaneId();\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi },\n      sourceChain\n    },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n  const { account } = useAccountContext();\n  const { payload } = useTransactionPreparation({ input, isValidCall, type, weightInput });\n  const { dispatchMessage } = useUpdateMessageContext();\n\n  const sendLaneMessage = async () => {\n    if (!account || isRunning) {\n      return;\n    }\n    const id = moment().format('x');\n    setIsRunning(true);\n    return makeCall(id);\n  };\n\n  const makeCall = async (id: string) => {\n    try {\n      if (!account || isRunning) {\n        return;\n      }\n\n      const { bridgedMessages } = getSubstrateDynamicNames(targetChain);\n      const bridgeMessage = sourceApi.tx[bridgedMessages].sendMessage(laneId, payload, estimatedFee);\n      logger.info(`bridge::sendMessage ${bridgeMessage.toHex()}`);\n      const options: Partial<SignerOptions> = {\n        nonce: -1\n      };\n      let sourceAccount: string | KeyringPair = account;\n      if (account.meta.isInjected) {\n        const injector = await web3FromSource(account.meta.source as string);\n        options.signer = injector.signer;\n        sourceAccount = account.address;\n      }\n      const unsub = await bridgeMessage.signAndSend(sourceAccount, { ...options }, ({ events = [], status }) => {\n        if (status.isReady) {\n          dispatchTransaction(\n            TransactionActionCreators.createTransactionStatus({\n              block: null,\n              blockHash: null,\n              id,\n              input,\n              messageNonce: null,\n              receiverAddress,\n              sourceAccount: account.address,\n              sourceChain,\n              status: TransactionStatusEnum.CREATED,\n              targetChain,\n              type\n            })\n          );\n        }\n        if (status.isBroadcast) {\n          dispatchMessage(MessageActionsCreators.triggerInfoMessage({ message: 'Transaction was broadcasted' }));\n        }\n        if (status.isInBlock) {\n          events.forEach(({ event: { data, method } }) => {\n            if (method.toString() === 'MessageAccepted') {\n              const messageNonce = data.toArray()[1].toString();\n              sourceApi.rpc.chain\n                .getBlock(status.asInBlock)\n                .then((res) => {\n                  const block = res.block.header.number.toString();\n                  dispatchTransaction(\n                    TransactionActionCreators.updateTransactionStatus(\n                      {\n                        block,\n                        blockHash: status.asInBlock.toString(),\n                        messageNonce,\n                        status: TransactionStatusEnum.IN_PROGRESS\n                      },\n                      id\n                    )\n                  );\n                })\n                .catch((e) => {\n                  logger.error(e.message);\n                  throw new Error('Issue reading block information.');\n                });\n            }\n          });\n        }\n        if (status.isFinalized) {\n          logger.info(`Transaction included at blockHash ${status.asFinalized}`);\n          unsub();\n        }\n      });\n    } catch (e) {\n      dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e.message }));\n      logger.error(e.message);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const { areApiReady } = useLoadingApi();\n\n  const isButtonDisabled = () => {\n    switch (type) {\n      case TransactionTypes.REMARK:\n        return isRunning || !account || !areApiReady;\n        break;\n      case TransactionTypes.TRANSFER:\n        return isRunning || !receiverAddress || !input || !account || !areApiReady;\n        break;\n      case TransactionTypes.CUSTOM:\n        return isRunning || !account || !input || !weightInput || !isValidCall || !areApiReady;\n        break;\n      default:\n        throw new Error(`Unknown type: ${type}`);\n    }\n  };\n\n  return { isButtonDisabled, sendLaneMessage };\n}\n\nexport default useSendMessage;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, TextField, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { Message } from 'semantic-ui-react';\nimport { ButtonSubmit } from '../components';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useSendMessage from '../hooks/useSendMessage';\nimport { TransactionTypes } from '../types/transactionTypes';\n\nconst CustomCall = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [decoded, setDecoded] = useState<string | null>();\n\n  const [customCallInput, setCustomCallInput] = useState('0x');\n  const [weightInput, setWeightInput] = useState<string>();\n  const [error, setError] = useState<string | null>();\n  const { sourceChainDetails, targetChainDetails } = useSourceTarget();\n\n  const { estimatedFee } = useTransactionContext();\n  const {\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi }\n    }\n  } = useSourceTarget();\n\n  const { isButtonDisabled, sendLaneMessage } = useSendMessage({\n    input: customCallInput,\n    isRunning,\n    isValidCall: Boolean(decoded),\n    setIsRunning,\n    type: TransactionTypes.CUSTOM,\n    weightInput\n  });\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    decodePayload(event.target.value);\n    setCustomCallInput(event.target.value);\n  };\n\n  const onWeightChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setWeightInput(event.target.value);\n  };\n\n  function decodePayload(input: string) {\n    try {\n      setError(null);\n      const call = targetApi.createType('Call', input);\n      setDecoded(JSON.stringify(call, null, 4));\n    } catch (e) {\n      setError('Wrong call provided');\n      setDecoded(null);\n    }\n  }\n\n  return (\n    <>\n      <Box mb={2}>\n        <TextField\n          onChange={onChange}\n          value={customCallInput}\n          label=\"Call\"\n          variant=\"outlined\"\n          fullWidth\n          helperText={error && `${error}`}\n        />\n      </Box>\n      <TextField onChange={onWeightChange} value={weightInput} label=\"Weight\" variant=\"outlined\" fullWidth />\n      <ButtonSubmit disabled={isButtonDisabled()} onClick={sendLaneMessage}>\n        Send custom call from {sourceChainDetails.sourceChain} to {targetChainDetails.targetChain}\n      </ButtonSubmit>\n      <Typography variant=\"body1\" color=\"secondary\">\n        {estimatedFee && `Estimated source Fee: ${estimatedFee}`}\n      </Typography>\n      <div>\n        {decoded && (\n          <Message>\n            <Message.Header>Decoded Call</Message.Header>\n            <p>\n              <pre>{decoded}</pre>\n            </p>\n          </Message>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default CustomCall;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport React from 'react';\nimport { Alert } from '.';\nimport { useKeyringContext } from '../contexts/KeyringContextProvider';\nimport useLoadingApi from '../hooks/useLoadingApi';\n\ninterface Props {\n  component: JSX.Element;\n}\n\n// TODO #176: Move this to a more generic error-show component\nconst statusFunc = (from: string, state: boolean) => `${from} chain status: ${!state ? 'disconnected' : 'connected'}`;\n\nconst ExtensionAccountCheck = ({ component }: Props): JSX.Element => {\n  const { extensionExists, accountExists } = useKeyringContext();\n  // TODO #176: Move this to a more generic error-show component\n  const { sourceReady, targetReady } = useLoadingApi();\n\n  let msg: string = '';\n  if (!extensionExists) {\n    msg = 'Connect to a wallet. Install polkadotjs extension';\n  } else if (!accountExists) {\n    msg = 'There are no accounts in the extension. Please create one';\n    // TODO #176: Move this to a more generic error-show component\n  } else if (!sourceReady || !targetReady) {\n    msg = `${!sourceReady ? statusFunc('Source', sourceReady) : ''} ${\n      !targetReady ? statusFunc('Target', targetReady) : ''\n    }`;\n  }\n\n  return <>{msg ? <Alert severity=\"error\">{msg}</Alert> : component}</>;\n};\n\nexport default ExtensionAccountCheck;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TextField, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { ButtonSubmit } from '../components';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useSendMessage from '../hooks/useSendMessage';\nimport { TransactionTypes } from '../types/transactionTypes';\n\nconst Remark = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [remarkInput, setRemarkInput] = useState('0x');\n  const { sourceChainDetails, targetChainDetails } = useSourceTarget();\n\n  const { estimatedFee } = useTransactionContext();\n\n  const { isButtonDisabled, sendLaneMessage } = useSendMessage({\n    input: remarkInput,\n    isRunning,\n    setIsRunning,\n    type: TransactionTypes.REMARK\n  });\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRemarkInput(event.target.value);\n  };\n\n  return (\n    <>\n      <TextField\n        label=\"Remark\"\n        value={remarkInput}\n        variant=\"outlined\"\n        fullWidth\n        multiline\n        rows={4}\n        onChange={onChange}\n      />\n      <ButtonSubmit disabled={isButtonDisabled()} onClick={sendLaneMessage}>\n        Send bridge remark from {sourceChainDetails.sourceChain} to {targetChainDetails.targetChain}\n      </ButtonSubmit>\n      <Typography variant=\"body1\" color=\"secondary\">\n        {estimatedFee && `Estimated source Fee: ${estimatedFee}`}\n      </Typography>\n    </>\n  );\n};\n\nexport default Remark;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { compactAddLength, stringToU8a } from '@polkadot/util';\nimport { blake2AsHex, decodeAddress, encodeAddress } from '@polkadot/util-crypto';\n\nconst accountDerivation = 'pallet-bridge/account-derivation/account';\n\ninterface Data {\n  ss58Format: number;\n  bridgeId: number[];\n  address: string;\n}\n\nexport default function getDeriveAccount({ ss58Format = 42, bridgeId, address }: Data): string {\n  const input = [...compactAddLength(stringToU8a(accountDerivation)), ...bridgeId, ...decodeAddress(address)];\n  return encodeAddress(blake2AsHex(Uint8Array.from(input)), ss58Format);\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { getBridgeId } from '../util/getConfigs';\nimport getDeriveAccount from '../util/getDeriveAccount';\n\nconst useDerivedAccount = () => {\n  const {\n    targetChainDetails: { targetConfigs },\n    sourceChainDetails: {\n      sourceConfigs: { chainName }\n    }\n  } = useSourceTarget();\n  const { account } = useAccountContext();\n\n  if (!account) {\n    return null;\n  }\n\n  const toDerive = {\n    ss58Format: targetConfigs.ss58Format,\n    address: account.address,\n    bridgeId: getBridgeId(targetConfigs, chainName)\n  };\n  return getDeriveAccount(toDerive);\n};\n\nexport default useDerivedAccount;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport { encodeAddress } from '@polkadot/util-crypto';\nimport { useEffect, useState } from 'react';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport { AccountActionCreators } from '../actions/accountActions';\nimport { SourceTargetActionsCreators } from '../actions/sourceTargetActions';\nimport { useUpdateAccountContext } from '../contexts/AccountContextProvider';\nimport { useAccountContext } from '../contexts/AccountContextProvider';\nimport { useKeyringContext } from '../contexts/KeyringContextProvider';\nimport { useUpdateSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useDerivedAccount from '../hooks/useDerivedAccount';\nimport useChainGetters from '../hooks/useChainGetters';\n\ninterface Accounts {\n  account: KeyringPair | null;\n  accounts: Array<KeyringPair> | [];\n  derivedAccount: string | null;\n  setCurrentAccount: (value: string, chain: string) => void;\n}\n\nconst useAccounts = (): Accounts => {\n  const { keyringPairs, keyringPairsReady } = useKeyringContext();\n  const [accounts, setAccounts] = useState<Array<KeyringPair> | []>([]);\n  const { dispatchAccount } = useUpdateAccountContext();\n  const { dispatchChangeSourceTarget } = useUpdateSourceTarget();\n  const derivedAccount = useDerivedAccount();\n  const { account } = useAccountContext();\n  const { getValuesByChain } = useChainGetters();\n  const { dispatchTransaction } = useUpdateTransactionContext();\n\n  useEffect(() => {\n    if (keyringPairsReady && keyringPairs.length) {\n      setAccounts(keyringPairs);\n    }\n  }, [keyringPairsReady, keyringPairs, setAccounts]);\n\n  const setCurrentAccount = (value: string, chain: string) => {\n    const { ss58Format } = getValuesByChain(chain);\n\n    const account = accounts.find(({ address }) => encodeAddress(address, ss58Format) === value);\n    if (account) {\n      dispatchChangeSourceTarget(SourceTargetActionsCreators.switchChains(chain));\n      dispatchTransaction(TransactionActionCreators.setUnformattedReceiverAddress(null));\n      dispatchAccount(AccountActionCreators.setAccount(account));\n    }\n  };\n\n  return {\n    account,\n    accounts,\n    derivedAccount,\n    setCurrentAccount\n  };\n};\n\nexport default useAccounts;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { checkAddress } from '@polkadot/util-crypto';\nimport { SourceState, TargetState } from '../types/sourceTargetTypes';\nimport { INCORRECT_FORMAT } from '../constants';\nimport getDeriveAccount from './getDeriveAccount';\nimport { getBridgeId } from './getConfigs';\n\ninterface Props {\n  getChainBySS58Prefix: (prefix: string) => string;\n  receiverAddress: string;\n  targetChainDetails: TargetState;\n  sourceChainDetails: SourceState;\n}\nconst getReceiverAddress = ({\n  getChainBySS58Prefix,\n  targetChainDetails,\n  sourceChainDetails,\n  receiverAddress\n}: Props) => {\n  const { sourceConfigs } = sourceChainDetails;\n  const { targetChain, targetConfigs } = targetChainDetails;\n\n  const targetSS58Format = targetConfigs.ss58Format;\n  const bridgeId = getBridgeId(targetConfigs, sourceConfigs.chainName);\n\n  try {\n    const [validatedDerivedAcccount, rest] = checkAddress(receiverAddress, targetSS58Format);\n    if (validatedDerivedAcccount) {\n      return { address: receiverAddress, formatFound: targetChain };\n    }\n    // should be extracted as a separate component/function\n\n    const parts = rest?.split(',');\n    const prefix = parts![2].split(' ');\n    const formatFound = getChainBySS58Prefix(prefix[2]) || prefix[2];\n\n    const address = getDeriveAccount({\n      ss58Format: targetSS58Format,\n      address: receiverAddress,\n      bridgeId\n    });\n\n    return { address, formatFound };\n  } catch (e) {\n    if (receiverAddress) {\n      throw new Error(INCORRECT_FORMAT);\n    }\n    return { address: '', formatFound: null };\n  }\n};\n\nexport default getReceiverAddress;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { INCORRECT_FORMAT } from '../constants';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useChainGetters from '../hooks/useChainGetters';\nimport getReceiverAddress from '../util/getReceiverAddress';\nimport logger from '../util/logger';\n\nexport default function useReceiver() {\n  const { dispatchTransaction } = useUpdateTransactionContext();\n\n  const { targetChainDetails, sourceChainDetails } = useSourceTarget();\n  const { getChainBySS58Prefix } = useChainGetters();\n\n  const setReceiver = (address: string | null) =>\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(address));\n\n  const setUnformattedReceiver = (address: string | null) =>\n    dispatchTransaction(TransactionActionCreators.setUnformattedReceiverAddress(address));\n\n  const validateAccount = (receiver: string) => {\n    try {\n      const { address, formatFound } = getReceiverAddress({\n        getChainBySS58Prefix,\n        targetChainDetails,\n        sourceChainDetails,\n        receiverAddress: receiver\n      });\n\n      return { formatFound, formattedAccount: address };\n    } catch (e) {\n      logger.error(e.message);\n      if (e.message === INCORRECT_FORMAT) {\n        return { formatFound: e.message, formattedAccount: receiver };\n      }\n    }\n  };\n\n  return { setReceiver, setUnformattedReceiver, validateAccount };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nimport { ApiPromise } from '@polkadot/api';\nimport { INCORRECT_FORMAT, GENERIC } from '../constants';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { getBridgeId } from '../util/getConfigs';\nimport getDeriveAccount from '../util/getDeriveAccount';\n\ntype State = {\n  address: string;\n  api: ApiPromise;\n};\n\nconst useApiBalance = (address: string | null, chain: string | undefined, isDerived: boolean): State => {\n  const {\n    sourceChainDetails: {\n      sourceApiConnection: { api: sourceApi },\n      sourceConfigs\n    },\n    targetChainDetails: {\n      targetApiConnection: { api: targetApi },\n      targetChain,\n      targetConfigs\n    }\n  } = useSourceTarget();\n\n  if (!chain || !address || chain === INCORRECT_FORMAT || chain === GENERIC) {\n    return { address: '', api: {} as ApiPromise };\n  }\n\n  const ss58Format = chain === targetChain ? targetConfigs.ss58Format : sourceConfigs.ss58Format;\n  const bridgeId =\n    chain === targetChain\n      ? getBridgeId(targetConfigs, sourceConfigs.chainName)\n      : getBridgeId(sourceConfigs, targetConfigs.chainName);\n\n  const addressResult = !isDerived\n    ? address\n    : getDeriveAccount({\n        ss58Format,\n        address,\n        bridgeId\n      });\n\n  const processedApi = chain === targetChain ? targetApi : sourceApi;\n\n  return { address: addressResult, api: processedApi };\n};\n\nexport default useApiBalance;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { ApiPromise } from '@polkadot/api';\nimport { VoidFn } from '@polkadot/api/types';\nimport { Balance } from '@polkadot/types/interfaces';\nimport { formatBalance } from '@polkadot/util';\nimport BN from 'bn.js';\nimport { useEffect } from 'react';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport logger from '../util/logger';\nimport { useMountedState } from './useMountedState';\n\ntype State = {\n  chainTokens: string;\n  formattedBalance: string;\n  free: Balance;\n};\n\nconst ZERO = new BN(0);\n\nconst initValues = {\n  chainTokens: '-',\n  formattedBalance: '0',\n  free: new BN(ZERO) as Balance\n};\n\nconst useBalance = (api: ApiPromise, address: string, providedSi: boolean = false): State => {\n  const { dispatchMessage } = useUpdateMessageContext();\n  const [state, setState] = useMountedState<State>(initValues);\n\n  useEffect((): (() => void) => {\n    const getBalance = async (api: ApiPromise, address: string, setState: any): Promise<VoidFn> => {\n      try {\n        const u = await api.query.system.account(address, ({ data }): void => {\n          setState({\n            chainTokens: data.registry.chainTokens[0],\n            formattedBalance: formatBalance(data.free, {\n              decimals: api.registry.chainDecimals[0],\n              withUnit: api.registry.chainTokens[0],\n              withSi: providedSi\n            }),\n            free: data.free\n          });\n        });\n        return Promise.resolve(u);\n      } catch (e) {\n        dispatchMessage(MessageActionsCreators.triggerErrorMessage({ message: e.message }));\n        logger.error(e.message);\n        return Promise.reject();\n      }\n    };\n\n    const unsubscribe: Promise<VoidFn> | null = address ? getBalance(api, address, setState) : null;\n\n    return async (): Promise<void> => {\n      unsubscribe && (await unsubscribe)();\n    };\n  }, [address, providedSi, dispatchMessage, api, setState]);\n\n  return state as State;\n};\n\nexport default useBalance;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport React from 'react';\n\ninterface Props {\n  balance?: string | null | undefined;\n  onClick?: () => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  balances: {\n    whiteSpace: 'nowrap',\n    ...theme.typography.subtitle2\n  }\n}));\n\nconst Balance = ({ balance, onClick }: Props) => {\n  const classes = useStyles();\n  return (\n    <div onClick={onClick} className={classes.balances}>\n      {balance || ''}\n    </div>\n  );\n};\n\nexport default Balance;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Identicon from '@polkadot/react-identicon';\nimport { INCORRECT_FORMAT } from '../constants';\nimport { useUpdateMessageContext } from '../contexts/MessageContext';\nimport { MessageActionsCreators } from '../actions/messageActions';\n\nimport ctx from 'classnames';\nimport React, { useCallback } from 'react';\nimport { IdentityProps } from '@polkadot/react-identicon/types';\ninterface Props extends IdentityProps {\n  address?: string;\n  formatFound?: string;\n}\nconst useStyles = makeStyles(() => ({\n  placeholder: {\n    filter: 'grayscale(1)'\n  }\n}));\nconst emptyAddress: string = '1nUC7afqmo7zwRFWxDjrUQu9skk6fk99pafb4SiyGSRc8z3';\n\nexport default function AccountIdenticon({ address, formatFound, size = 24, theme = 'polkadot', ...props }: Props) {\n  const { dispatchMessage } = useUpdateMessageContext();\n  const placeholder = !address || formatFound === INCORRECT_FORMAT;\n  const value = !placeholder ? address : emptyAddress;\n  const classes = useStyles();\n\n  const onCopy = useCallback(() => {\n    value !== emptyAddress &&\n      dispatchMessage(MessageActionsCreators.triggerSuccessMessage({ message: 'Address copied' }));\n  }, [dispatchMessage, value]);\n\n  return (\n    <Identicon\n      className={ctx(placeholder && classes.placeholder)}\n      value={value}\n      size={size}\n      theme={theme}\n      {...props}\n      onCopy={onCopy}\n    />\n  );\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\n/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport Container from '@material-ui/core/Container';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport Balance from './Balance';\nimport shorterItem from '../util/shortenItem';\nimport AccountIdenticon from './AccountIdenticon';\nimport { Box, Tooltip } from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nexport interface Props {\n  friendlyName?: string | null;\n  isDerived?: boolean;\n  addressKind?: AddressKind | string;\n  address?: string;\n  hideAddress?: boolean;\n  onClick?: () => void;\n  balance?: string | null | undefined;\n  className?: string;\n  withTooltip?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n    width: '100%',\n    overflow: 'auto'\n  },\n  missingAddress: {\n    color: theme.palette.text.disabled\n  },\n  tooltipIcon: {\n    ...theme.typography.body1,\n    marginTop: 2,\n    marginLeft: 2,\n    '&:not(:hover)': {\n      color: fade(theme.palette.text.hint, 0.75)\n    }\n  }\n}));\n\nconst AccountDisplay = ({\n  address = '',\n  addressKind,\n  balance,\n  friendlyName,\n  hideAddress = false,\n  onClick,\n  className,\n  withTooltip\n}: Props) => {\n  const classes = useStyles();\n  const displayText = () => {\n    const shortAddress = shorterItem(address);\n    const name = friendlyName ? `${friendlyName} [${shortAddress}]` : shortAddress;\n    const justFriendlyName = friendlyName || shortAddress;\n    const displayName = hideAddress ? justFriendlyName : name;\n\n    if (addressKind) {\n      return `${addressKind}(${displayName})`;\n    }\n\n    return displayName;\n  };\n\n  return (\n    <Box onClick={onClick} display=\"flex\" alignItems=\"center\" className={className}>\n      <AccountIdenticon address={address} />\n      <div className={`${classes.address} ${!address && classes.missingAddress}`}>\n        {displayText()}\n        {withTooltip && (\n          <Tooltip title={address} arrow placement=\"top\" interactive>\n            <HelpOutlineIcon className={classes.tooltipIcon} />\n          </Tooltip>\n        )}\n      </div>\n      <Balance balance={balance} />\n    </Box>\n  );\n};\n\nexport enum AddressKind {\n  NATIVE = 'native',\n  COMPANION = 'companion'\n}\n\nexport default AccountDisplay;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\n\nimport useApiBalance from '../hooks/useApiBalance';\nimport useBalance from '../hooks/useBalance';\nimport AccountDisplay, { AddressKind, Props as AccountDisplayProps } from './AccountDisplay';\n\ninterface Props extends AccountDisplayProps {\n  chain?: string | undefined;\n  value: string;\n}\n\nconst Account = ({ value, chain, hideAddress = false, isDerived = false, ...props }: Props) => {\n  const { api, address } = useApiBalance(value, chain, isDerived);\n\n  const state = useBalance(api, address, true);\n\n  return (\n    <>\n      <AccountDisplay\n        address={address}\n        balance={`${state.formattedBalance} ${state.formattedBalance === '0' ? state.chainTokens : ''}`}\n        addressKind={isDerived ? AddressKind.COMPANION : undefined}\n        hideAddress={hideAddress}\n        {...props}\n      />\n    </>\n  );\n};\n\nexport default Account;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { MenuItem, Select } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { encodeAddress } from '@polkadot/util-crypto';\nimport React, { useEffect, useState } from 'react';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useAccounts from '../hooks/useAccounts';\nimport useReceiver from '../hooks/useReceiver';\nimport useLoadingApi from '../hooks/useLoadingApi';\nimport { Account as AccountType } from '../types/accountTypes';\nimport formatAccounts from '../util/formatAccounts';\nimport Account from './Account';\nimport AccountDisplay, { AddressKind } from './AccountDisplay';\nimport { SelectLabel, styleAccountCompanion } from '../components';\nimport useChainGetters from '../hooks/useChainGetters';\n\n// TODO replace MUI Select with MUI Popover it wraps around or Autocomplete to have more control over appearance\n\nconst useStyles = makeStyles((theme) => ({\n  networkHeading: {\n    padding: theme.spacing(2),\n    paddingBottom: 0,\n    borderTop: `1px solid ${theme.palette.divider}`,\n    ...theme.typography.overline,\n    color: theme.palette.text.hint,\n    '&:first-child': {\n      paddingTop: 0,\n      border: 'none'\n    }\n  },\n  selectAccountMainItem: {\n    display: 'block',\n    paddingTop: theme.spacing(),\n    paddingBottom: theme.spacing(),\n    paddingLeft: theme.spacing(1.75)\n  },\n  accountMain: {\n    '& .MuiSelect-select': {\n      padding: theme.spacing(1.25),\n      paddingTop: theme.spacing(0.5),\n      paddingRight: theme.spacing(3),\n      border: `1px solid ${theme.palette.divider}`,\n      borderRadius: theme.spacing(1.5),\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }\n  },\n  accountCompanion: {\n    ...styleAccountCompanion(theme)\n  }\n}));\n\nconst Sender = () => {\n  const classes = useStyles();\n  const [chains, setChains] = useState<Array<string[]>>([]);\n  const { account, accounts, derivedAccount, setCurrentAccount } = useAccounts();\n  const {\n    sourceChainDetails: {\n      sourceChain,\n      sourceConfigs: { ss58Format }\n    },\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n  const { setReceiver } = useReceiver();\n  const { getValuesByChain } = useChainGetters();\n\n  const { areApiReady } = useLoadingApi();\n\n  useEffect(() => {\n    if (!chains.length) {\n      setChains([\n        [sourceChain, targetChain],\n        [targetChain, sourceChain]\n      ]);\n    }\n  }, [chains.length, sourceChain, targetChain]);\n\n  const value = account ? encodeAddress(account.address, ss58Format) : 'init';\n\n  const onChange = (value: string, chain: string) => {\n    setCurrentAccount(value, chain);\n    setReceiver(null);\n  };\n\n  const renderAccounts = (chains: string[]) => {\n    const [source, target] = chains;\n    const { ss58Format } = getValuesByChain(source);\n    const formatedAccounts = formatAccounts(accounts, ss58Format);\n    const items = formatedAccounts.map(({ text, value, key }: any) => (\n      <MenuItem\n        className={classes.selectAccountMainItem}\n        key={key}\n        value={value}\n        onClick={() => {\n          onChange(value, source);\n        }}\n      >\n        <Account friendlyName={text} value={value} chain={source} />\n        <Account friendlyName={text} value={value} chain={target} isDerived hideAddress />\n      </MenuItem>\n    ));\n    return [\n      <div className={classes.networkHeading} key={source}>\n        {source}\n      </div>,\n      items\n    ];\n  };\n\n  const getName = (account: AccountType) => (account!.meta.name as string).toLocaleUpperCase();\n\n  const AccountSelected = () => {\n    if (account) {\n      const text = getName(account);\n      return <Account friendlyName={text} value={value} chain={sourceChain} />;\n    }\n    return <AccountDisplay friendlyName=\"Select sender account\" hideAddress />;\n  };\n\n  return (\n    <>\n      <Select\n        disableUnderline\n        fullWidth\n        disabled={!areApiReady}\n        className={classes.accountMain}\n        value={value}\n        renderValue={(): React.ReactNode => (\n          <>\n            <SelectLabel>Sender</SelectLabel>\n            <AccountSelected />\n          </>\n        )}\n      >\n        {chains.map((chain) => renderAccounts(chain))}\n      </Select>\n      <div className={classes.accountCompanion}>\n        {derivedAccount ? (\n          <Account\n            friendlyName={getName(account)}\n            value={value}\n            chain={targetChain}\n            isDerived\n            hideAddress\n            withTooltip\n          />\n        ) : (\n          <AccountDisplay friendlyName=\"Sender\" addressKind={AddressKind.COMPANION} hideAddress />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Sender;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport type { KeyringPair } from '@polkadot/keyring/types';\nimport { encodeAddress } from '@polkadot/util-crypto';\n\nexport default function formatAccounts(accounts: Array<KeyringPair>, ss58Format: number) {\n  // TO-DO: This function lacks the  capabillity to filter accounts that exist only on specific chains.\n  return accounts.map(({ meta, address }) => {\n    const formatedAddress = encodeAddress(address, ss58Format);\n    return {\n      icon: 'user',\n      key: formatedAddress,\n      text: (meta.name as string).toLocaleUpperCase(),\n      value: formatedAddress\n    };\n  });\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useSnackbar } from 'notistack';\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport { MessageActionsCreators } from '../actions/messageActions';\nimport { useMessageContext, useUpdateMessageContext } from '../contexts/MessageContext';\n\nconst CloseButton = styled.button`\n  display: inline-block;\n  color: white;\n  font-size: 1em;\n  background: transparent;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: none;\n  display: block;\n  outline: none;\n  font-weight: 600;\n`;\n\nexport default function SnackBar() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { message, variant } = useMessageContext();\n  const { dispatchMessage } = useUpdateMessageContext();\n\n  useEffect(() => {\n    if (message && variant) {\n      enqueueSnackbar(message, {\n        action: <CloseButton onClick={() => closeSnackbar()}>CLOSE</CloseButton>,\n        anchorOrigin: { horizontal: 'right', vertical: 'top' },\n        variant\n      });\n      dispatchMessage(MessageActionsCreators.clearMessage());\n    }\n  }, [closeSnackbar, message, variant, enqueueSnackbar, dispatchMessage]);\n\n  return null;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\nimport { InputAdornment } from '@material-ui/core';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\n\ninterface Props {\n  position?: 'start' | 'end';\n}\n\nexport const TokenSymbol = ({ position = 'start' }: Props): React.ReactElement => {\n  const { targetChainDetails } = useSourceTarget();\n\n  return (\n    <InputAdornment position={position}>\n      {targetChainDetails.targetApiConnection.api.registry.chainTokens}\n    </InputAdornment>\n  );\n};\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, InputBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { INCORRECT_FORMAT, GENERIC } from '../constants';\nimport { TransactionActionCreators } from '../actions/transactionActions';\n\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext, useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport useApiBalance from '../hooks/useApiBalance';\nimport useBalance from '../hooks/useBalance';\nimport usePrevious from '../hooks/usePrevious';\n\nimport useReceiver from '../hooks/useReceiver';\nimport AccountIdenticon from './AccountIdenticon';\nimport { SelectLabel } from '../components';\nimport Balance from './Balance';\n\ninterface Props {\n  setError: (value: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  accountMain: {\n    padding: theme.spacing(1.25),\n    paddingTop: theme.spacing(0.5),\n    paddingRight: theme.spacing(3),\n    border: `1px solid ${theme.palette.divider}`,\n    borderRadius: theme.spacing(1.5),\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    '& input': {\n      color: theme.palette.text.secondary\n    }\n  },\n  address: {\n    marginLeft: theme.spacing(),\n    marginRight: theme.spacing(),\n    width: '100%',\n    overflow: 'auto'\n  }\n}));\n\n// TODO: To refactor state management for this component #160\n\nfunction ReceiverInput({ setError }: Props) {\n  const classes = useStyles();\n  const [formatFound, setFormatFound] = useState('');\n  const [showBalance, setShowBalance] = useState(false);\n\n  const { setReceiver, setUnformattedReceiver, validateAccount } = useReceiver();\n\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const { receiverAddress, unformattedReceiverAddress } = useTransactionContext();\n\n  const { api, address } = useApiBalance(unformattedReceiverAddress, formatFound, false);\n\n  const state = useBalance(api, address, true);\n\n  const {\n    targetChainDetails: { targetChain },\n    sourceChainDetails: { sourceChain }\n  } = useSourceTarget();\n  const prevTargetChain = usePrevious(targetChain);\n\n  const reset = useCallback(() => {\n    dispatchTransaction(TransactionActionCreators.setGenericAccount(null));\n    dispatchTransaction(TransactionActionCreators.setDerivedAccount(null));\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(null));\n    setShowBalance(false);\n    setError('');\n  }, [dispatchTransaction, setError]);\n\n  useEffect(() => {\n    if (prevTargetChain !== targetChain) {\n      reset();\n      setUnformattedReceiver(null);\n    }\n    if (!unformattedReceiverAddress) {\n      setShowBalance(false);\n    }\n  }, [unformattedReceiverAddress, setUnformattedReceiver, prevTargetChain, receiverAddress, reset, targetChain]);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const receiver = event.target.value;\n    reset();\n    setUnformattedReceiver(receiver);\n    if (!receiver) {\n      return;\n    }\n\n    const { formattedAccount, formatFound } = validateAccount(receiver)!;\n    setFormatFound(formatFound);\n    if (formatFound === INCORRECT_FORMAT) {\n      setError('Invalid address');\n      return;\n    }\n\n    if (formatFound === GENERIC) {\n      dispatchTransaction(TransactionActionCreators.setGenericAccount(receiver));\n      return;\n    }\n\n    if (formatFound === targetChain) {\n      setReceiver(formattedAccount);\n      setShowBalance(true);\n      return;\n    }\n\n    if (formatFound === sourceChain) {\n      dispatchTransaction(TransactionActionCreators.setDerivedAccount(formattedAccount));\n      setReceiver(receiver);\n      return;\n    }\n\n    setError(`Unsupported address SS58 prefix: ${formatFound}`);\n  };\n\n  const addressInput = unformattedReceiverAddress || '';\n  return (\n    <div className={classes.accountMain}>\n      <SelectLabel>Receiver</SelectLabel>\n      <Box display=\"flex\" alignItems=\"center\">\n        <AccountIdenticon address={addressInput} formatFound={formatFound} />\n        <InputBase\n          className={classes.address}\n          fullWidth\n          onChange={onChange}\n          value={addressInput}\n          placeholder=\"Recipient address\"\n        />\n        {showBalance && state && <Balance balance={state.formattedBalance} />}\n      </Box>\n    </div>\n  );\n}\n\nexport default ReceiverInput;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\nconst si = [\n  { value: -1e24, symbol: 'y' },\n  { value: -1e21, symbol: 'z' },\n  { value: -1e18, symbol: 'a' },\n  { value: -1e15, symbol: 'f' },\n  { value: -1e12, symbol: 'p' },\n  { value: -1e9, symbol: 'n' },\n  { value: -1e6, symbol: 'μ' },\n  { value: -1e3, symbol: 'm' },\n  { value: 1, symbol: '' },\n  { value: 1e3, symbol: 'k' },\n  { value: 1e6, symbol: 'M' },\n  { value: 1e9, symbol: 'G' },\n  { value: 1e12, symbol: 'T' },\n  { value: 1e15, symbol: 'P' },\n  { value: 1e18, symbol: 'E' },\n  { value: 1e21, symbol: 'Z' },\n  { value: 1e24, symbol: 'Y' }\n];\n\nconst floats = /^[0-9]*[.,]{1}[0-9]*$/;\nconst ints = /^[0-9]+$/;\nconst alphaFloats = /^[0-9]*[.,]{1}[0-9]*[a-zA-Z]{1}$/;\nconst alphaInts = /^[0-9]*[a-zA-Z]{1}$/;\n\nexport enum EvalMessages {\n  GIBBERISH = 'Input is not correct. Use numbers, floats or expression (e.g. 1k, 1.3m)',\n  SUCCESS = '',\n  SYMBOL_ERROR = 'Provided symbol is not correct',\n  GENERAL_ERROR = 'Check your input. Something went wrong'\n}\n\n/**\n * A function that identifes integer/float(comma or dot)/expressions (such as 1k)\n * and converts to actual value (or reports an error).\n * @param {string} input\n * @returns {[number | null, string]} an array of 2 items\n * the first is the actual calculated number (or null if none) while\n * the second is the message that should appear in case of error\n */\nexport function evalUnits(input: string): [number | null, string] {\n  if (!floats.test(input) && !ints.test(input) && !alphaInts.test(input) && !alphaFloats.test(input)) {\n    return [null, EvalMessages.GIBBERISH];\n  }\n\n  if (floats.test(input) || ints.test(input)) {\n    return [parseFloat(input.replace(/[,]/g, '.')), EvalMessages.SUCCESS];\n  } else if (alphaInts.test(input) || alphaFloats.test(input)) {\n    const numericPart = parseFloat(input.replace(/[,]/g, '.'));\n    const charPart = input.replace(/[0-9.,]/g, '');\n    const siVal = si.find((s) => s.symbol === charPart);\n    return siVal ? [numericPart * siVal.value, EvalMessages.SUCCESS] : [null, EvalMessages.SYMBOL_ERROR];\n  } else {\n    return [null, EvalMessages.GENERAL_ERROR];\n  }\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value: any) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { encodeAddress } from '@polkadot/util-crypto';\nimport React, { useState } from 'react';\nimport { useUpdateTransactionContext } from '../contexts/TransactionContext';\nimport { TransactionActionCreators } from '../actions/transactionActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport useBalance from '../hooks/useBalance';\nimport getDeriveAccount from '../util/getDeriveAccount';\nimport shorterItem from '../util/shortenItem';\nimport { getBridgeId } from '../util/getConfigs';\nimport AccountDisplay, { AddressKind } from './AccountDisplay';\nimport { Paper } from '@material-ui/core';\nimport { styleAccountCompanion } from '.';\n\ninterface Props {\n  value: string;\n  isDerived?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  accountCompanion: {\n    ...styleAccountCompanion(theme),\n    borderRadius: 0,\n    '&:last-child': {\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      borderRadius: theme.spacing(1.5)\n    }\n  },\n  selectAccountCompanionItem: {\n    '&:hover': {\n      cursor: 'pointer',\n      backgroundColor: theme.palette.secondary.light\n    }\n  }\n}));\n\nconst NATIVE = 'NATIVE';\nconst COMPANION = 'COMPANION';\n\nconst GenericAccount = ({ value }: Props) => {\n  const [selected, setSelected] = useState('');\n  const classes = useStyles();\n\n  const { dispatchTransaction } = useUpdateTransactionContext();\n  const {\n    sourceChainDetails: { sourceConfigs },\n    targetChainDetails: {\n      targetConfigs,\n      targetApiConnection: { api: targetApi }\n    }\n  } = useSourceTarget();\n\n  const nativeAddress = encodeAddress(value, targetConfigs.ss58Format);\n  const nativeState = useBalance(targetApi, nativeAddress, true);\n\n  const companionAddress = getDeriveAccount({\n    ss58Format: targetConfigs.ss58Format,\n    address: value,\n    bridgeId: getBridgeId(targetConfigs, sourceConfigs.chainName)\n  });\n  const companionState = useBalance(targetApi, companionAddress, true);\n\n  const looseHelperAccount = () => {\n    setSelected('');\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(null));\n  };\n\n  const setNativeAsTarget = () => {\n    if (selected) {\n      looseHelperAccount();\n      return;\n    }\n    setSelected(NATIVE);\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(nativeAddress));\n  };\n\n  const setCompanionAsTarget = () => {\n    if (selected) {\n      looseHelperAccount();\n      return;\n    }\n    setSelected(COMPANION);\n    dispatchTransaction(TransactionActionCreators.setReceiverAddress(companionAddress));\n  };\n\n  const shortGenericAddress = shorterItem(value);\n  return (\n    <Paper elevation={!selected ? 23 : 0}>\n      {(!selected || selected === NATIVE) && (\n        <AccountDisplay\n          className={`${classes.accountCompanion} ${classes.selectAccountCompanionItem}`}\n          onClick={setNativeAsTarget}\n          address={nativeAddress}\n          addressKind={AddressKind.NATIVE}\n          balance={nativeState.formattedBalance}\n          friendlyName={shortGenericAddress}\n          hideAddress\n          withTooltip\n        />\n      )}\n      {(!selected || selected === COMPANION) && (\n        <AccountDisplay\n          className={`${classes.accountCompanion} ${classes.selectAccountCompanionItem}`}\n          onClick={setCompanionAsTarget}\n          address={companionAddress}\n          addressKind={AddressKind.COMPANION}\n          balance={companionState.formattedBalance}\n          friendlyName={shortGenericAddress}\n          hideAddress\n          withTooltip\n        />\n      )}\n    </Paper>\n  );\n};\n\nexport default GenericAccount;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport Account from './Account';\nimport AccountDisplay, { AddressKind } from './AccountDisplay';\nimport GenericAccount from './GenericAccount';\nimport shortenItem from '../util/shortenItem';\nimport { styleAccountCompanion } from './Inputs';\n\nconst useStyles = makeStyles((theme) => ({\n  accountCompanion: {\n    ...styleAccountCompanion(theme)\n  }\n}));\n\nconst ReceiverDerivedAccount = () => {\n  const classes = useStyles();\n  const {\n    genericReceiverAccount,\n    derivedReceiverAccount,\n    receiverAddress,\n    unformattedReceiverAddress\n  } = useTransactionContext();\n\n  const {\n    targetChainDetails: { targetChain }\n  } = useSourceTarget();\n\n  if (genericReceiverAccount) {\n    return <GenericAccount value={genericReceiverAccount} />;\n  }\n\n  if (derivedReceiverAccount) {\n    const shortUnformattedReceiver = shortenItem(unformattedReceiverAddress || '');\n    return (\n      <div className={classes.accountCompanion}>\n        <Account\n          friendlyName={shortUnformattedReceiver}\n          value={receiverAddress!}\n          chain={targetChain}\n          isDerived\n          hideAddress\n          withTooltip\n        />\n      </div>\n    );\n  }\n\n  if (!receiverAddress) {\n    return (\n      <div className={classes.accountCompanion}>\n        <AccountDisplay />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes.accountCompanion}>\n      <AccountDisplay address={receiverAddress!} addressKind={AddressKind.NATIVE} withTooltip />\n    </div>\n  );\n};\n\nexport default ReceiverDerivedAccount;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from 'react';\nimport ReceiverInput from './ReceiverInput';\nimport ReceiverDerivedAccount from './ReceiverDerivedAccount';\nimport { Typography } from '@material-ui/core';\n\nconst Receiver = () => {\n  const [error, setError] = useState('');\n\n  return (\n    <>\n      <ReceiverInput setError={setError} />\n      <ReceiverDerivedAccount />\n      <Typography variant=\"body2\" color=\"error\">\n        {error}\n      </Typography>\n    </>\n  );\n};\n\nexport default Receiver;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, makeStyles, TextField, Typography } from '@material-ui/core';\nimport BN from 'bn.js';\nimport { useSourceTarget } from '../contexts/SourceTargetContextProvider';\nimport { useTransactionContext } from '../contexts/TransactionContext';\nimport useAccounts from '../hooks/useAccounts';\nimport useBalance from '../hooks/useBalance';\nimport useSendMessage from '../hooks/useSendMessage';\nimport { TransactionTypes } from '../types/transactionTypes';\nimport { TokenSymbol } from './TokenSymbol';\nimport Receiver from './Receiver';\nimport { evalUnits } from '../util/evalUnits';\nimport { Alert, ButtonSubmit } from '../components';\n\nconst useStyles = makeStyles((theme) => ({\n  inputAmount: {\n    '& .MuiInputBase-root': {\n      '& .MuiInputAdornment-root': {\n        position: 'absolute',\n        right: theme.spacing(2),\n        ...theme.typography.subtitle2\n      },\n      '& input': {\n        textAlign: 'center',\n        ...theme.typography.subtitle2,\n        fontSize: theme.typography.h1.fontSize,\n        color: theme.palette.primary.main\n      }\n    }\n  }\n}));\n\nfunction Transfer() {\n  const classes = useStyles();\n  const [isRunning, setIsRunning] = useState(false);\n  const [helperText, setHelperText] = useState('');\n  const [transferInput, setTransferInput] = useState<string>('');\n  const [actualInput, setActualInput] = useState<number | null>();\n  const [amountNotCorrect, setAmountNotCorrect] = useState<boolean>(false);\n  const { sourceChainDetails, targetChainDetails } = useSourceTarget();\n  const { account } = useAccounts();\n\n  const planck = 10 ** targetChainDetails.targetApiConnection.api.registry.chainDecimals[0];\n  const { estimatedFee, receiverAddress } = useTransactionContext();\n  const { api, isApiReady } = sourceChainDetails.sourceApiConnection;\n  const balance = useBalance(api, account?.address || '');\n\n  const { isButtonDisabled, sendLaneMessage } = useSendMessage({\n    input: actualInput?.toString() ?? '',\n    isRunning,\n    setIsRunning,\n    type: TransactionTypes.TRANSFER\n  });\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value) {\n      const [actualValue, message] = evalUnits(event.target.value);\n      setHelperText(message);\n      setActualInput(actualValue && actualValue * planck);\n    }\n    setTransferInput(event.target.value);\n  };\n\n  useEffect((): void => {\n    isRunning && setTransferInput('');\n  }, [isRunning]);\n\n  useEffect((): void => {\n    estimatedFee &&\n      actualInput &&\n      setAmountNotCorrect(new BN(balance.free).sub(new BN(actualInput).add(new BN(estimatedFee))).toNumber() < 0);\n  }, [actualInput, estimatedFee, balance, isApiReady]);\n\n  return (\n    <>\n      <Box mb={2}>\n        <TextField\n          onChange={onChange}\n          value={transferInput}\n          placeholder={'0'}\n          className={classes.inputAmount}\n          fullWidth\n          variant=\"outlined\"\n          helperText={helperText}\n          InputProps={{\n            endAdornment: <TokenSymbol position=\"start\" />\n          }}\n        />\n      </Box>\n      <Receiver />\n      <ButtonSubmit disabled={isButtonDisabled() || amountNotCorrect} onClick={sendLaneMessage}>\n        Send bridge transfer from {sourceChainDetails.sourceChain} to {targetChainDetails.targetChain}\n      </ButtonSubmit>\n      {amountNotCorrect ? (\n        <Alert severity=\"error\">\n          Account&apos;s amount (including fees: {estimatedFee}) is not enough for this transaction.\n        </Alert>\n      ) : (\n        <Typography variant=\"body1\" color=\"secondary\">\n          {receiverAddress && estimatedFee && `Estimated source Fee: ${estimatedFee}`}\n        </Typography>\n      )}\n    </>\n  );\n}\n\nexport default Transfer;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { Box, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\n\nimport { BoxSidebar, BoxUI, ButtonExt, StorageDrawer, MenuAction, NetworkSides, NetworkStats } from '../components';\nimport CustomCall from '../components/CustomCall';\nimport ExtensionAccountCheck from '../components/ExtensionAccountCheck';\nimport Remark from '../components/Remark';\nimport Sender from '../components/Sender';\nimport SnackBar from '../components/SnackBar';\nimport Transfer from '../components/Transfer';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Transactions from '../components/Transactions';\n\ninterface MenuActionItemsProps {\n  idx: number;\n  title: string;\n  isEnabled: boolean;\n  component: React.ReactElement;\n}\n\nconst MenuContents = [\n  {\n    idx: 0,\n    title: 'Transfer',\n    isEnabled: true,\n    component: <Transfer />\n  },\n  {\n    idx: 1,\n    title: 'Remark',\n    isEnabled: true,\n    component: <Remark />\n  },\n  {\n    idx: 2,\n    title: 'Custom Call',\n    isEnabled: true,\n    component: <CustomCall />\n  }\n];\n\nfunction Main() {\n  const [items] = useState<MenuActionItemsProps[]>(MenuContents as MenuActionItemsProps[]);\n  const [index, setIndex] = useState<number>(0);\n\n  const searchItems = (choice: number) => items.find((x) => x.idx === choice);\n\n  return (\n    <>\n      <BoxSidebar>\n        <div>\n          <Typography variant=\"button\">Bridges UI</Typography>\n          <NetworkSides />\n          <NetworkStats />\n          <StorageDrawer />\n        </div>\n        <ButtonExt> Help & Feedback </ButtonExt>\n      </BoxSidebar>\n      <BoxUI>\n        <MenuAction items={items} menuIdx={index} changeMenu={setIndex} />\n        <ExtensionAccountCheck component={<Sender />} />\n        <Box marginY={2} textAlign=\"center\" width=\"100%\">\n          <ArrowDownwardIcon fontSize=\"large\" color=\"primary\" />\n        </Box>\n        <>{searchItems(index)?.component}</>\n        <Transactions type={searchItems(index)?.title} />\n        <SnackBar />\n      </BoxUI>\n    </>\n  );\n}\n\nexport default Main;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from 'react';\nimport { Backdrop, CircularProgress } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { substrateProviders } from './configs';\nimport { AccountContextProvider } from './contexts/AccountContextProvider';\nimport { GUIContextProvider } from './contexts/GUIContextProvider';\nimport { KeyringContextProvider } from './contexts/KeyringContextProvider';\nimport { MessageContextProvider } from './contexts/MessageContext';\nimport { SourceTargetContextProvider } from './contexts/SourceTargetContextProvider';\nimport { TransactionContextProvider } from './contexts/TransactionContext';\nimport { useConnections } from './hooks/useConnections';\nimport Main from './screens/Main';\nimport { isEmpty } from 'lodash';\n\nconst [connectionDetails1, connectionDetails2] = substrateProviders();\n\nfunction App() {\n  const { connections } = useConnections([connectionDetails1, connectionDetails2]);\n\n  if (isEmpty(connections)) {\n    return (\n      <Backdrop open>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    );\n  }\n\n  return (\n    <SourceTargetContextProvider connections={connections}>\n      <MessageContextProvider>\n        <SnackbarProvider>\n          <KeyringContextProvider>\n            <AccountContextProvider>\n              <TransactionContextProvider>\n                <BrowserRouter>\n                  <Switch>\n                    <Route path={'/'}>\n                      <GUIContextProvider>\n                        <Main />\n                      </GUIContextProvider>\n                    </Route>\n                  </Switch>\n                </BrowserRouter>\n              </TransactionContextProvider>\n            </AccountContextProvider>\n          </KeyringContextProvider>\n        </SnackbarProvider>\n      </MessageContextProvider>\n    </SourceTargetContextProvider>\n  );\n}\n\nexport default App;\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { useState, useEffect } from 'react';\nimport { useApiConnection } from './useApiConnection';\nimport isEmpty from 'lodash/isEmpty';\nimport { SourceTargetState, ChainDetails, ConnectionChainInformation } from '../types/sourceTargetTypes';\n\nexport function useConnections(chainsConnections: ConnectionChainInformation[]) {\n  const [connectionDetails1, connectionDetails2] = chainsConnections;\n  const { configs: chain1Configs, polkadotjsUrl: polkadotjsUrl1, ...apiConnection1 } = useApiConnection(\n    connectionDetails1\n  );\n  const { configs: chain2Configs, polkadotjsUrl: polkadotjsUrl2, ...apiConnection2 } = useApiConnection(\n    connectionDetails2\n  );\n  const [connections, setConnections] = useState<SourceTargetState>({} as SourceTargetState);\n  const [apiReady, setApiReady] = useState(false);\n\n  useEffect(() => {\n    if (chain1Configs && chain2Configs) {\n      const chainName1 = chain1Configs.chainName;\n      const chainName2 = chain2Configs.chainName;\n      const apiReady = apiConnection1?.isApiReady && apiConnection2?.isApiReady;\n      if (chainName1 && chainName2 && isEmpty(connections)) {\n        const connections = {\n          [ChainDetails.SOURCE]: {\n            sourceConfigs: chain1Configs,\n            sourceApiConnection: apiConnection1,\n            sourceChain: chainName1,\n            sourcePolkadotjsUrl: polkadotjsUrl1\n          },\n          [ChainDetails.TARGET]: {\n            targetConfigs: chain2Configs,\n            targetApiConnection: apiConnection2,\n            targetChain: chainName2,\n            targetPolkadotjsUrl: polkadotjsUrl2\n          }\n        };\n        setConnections(connections);\n        setApiReady(apiReady);\n      }\n    }\n  }, [apiConnection1, apiConnection2, chain1Configs, chain2Configs, connections, polkadotjsUrl1, polkadotjsUrl2]);\n\n  return { connections, apiReady };\n}\n","// Copyright 2021 Parity Technologies (UK) Ltd.\n// This file is part of Parity Bridges UI.\n//\n// Parity Bridges UI is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Parity Bridges UI is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Parity Bridges UI.  If not, see <http://www.gnu.org/licenses/>.\n\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { checkExpectedVariables } from './util/envVariablesValidations';\n\ncheckExpectedVariables();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}